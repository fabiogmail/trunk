<?xml version = '1.0' encoding = 'UTF-8'?>
<TableView class="oracle.dbtools.crest.model.design.relational.TableView" directorySegmentName="seg_0" id="F104EABC-606B-6BD5-0BD0-B1F9FC4CB0FA" name="VIEW_SMP6_MSC">
<createdBy>osx</createdBy>
<createdTime>2013-11-25 17:28:03 UTC</createdTime>
<generatorID>Gerado pelo usu√°rio</generatorID>
<ownerDesignName>metricView</ownerDesignName>
<afterCreate>CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_SMP6_MSC&quot; (&quot;DATA&quot;, &quot;MSC&quot;, &quot;CN&quot;, &quot;PMM&quot;, &quot;SMP_A&quot;, &quot;SMP_B&quot;, &quot;SMP&quot;, &quot;DT_FORMATADA&quot;, &quot;CHAM_ENT60&quot;, &quot;EXPURGO_TOTAL&quot;, &quot;OK&quot;, &quot;NOK&quot;, &quot;UNIDADE_PRIMARIA&quot;, &quot;UNIDADE_SECUNDARIA&quot;, &quot;VINCULADO&quot;) AS &lt;br/&gt;  WITH dados_traducao_sem_vinculo as (select DATA, PMM, MSC, CN, CHAM_ENT60, EXPURGO_TOTAL, CHAM_TOT, OK, NOK  from view_msc_vinculo_smp6&lt;br/&gt;    UNION ALL&lt;br/&gt;    select DATA, PMM, bilhetador_original, CN, CHAM_ENT60, EXPURGO_TOTAL, CHAM_TOT, OK, NOK  from view_msc_vinculo_smp6 where bilhetador_original &lt;&gt; msc&lt;br/&gt;  ),dados_smp_msc AS&lt;br/&gt;  (SELECT Data,&lt;br/&gt;    Msc,&lt;br/&gt;    CN,&lt;br/&gt;    Smp6_A,&lt;br/&gt;    SMP6_B,&lt;br/&gt;    CASE&lt;br/&gt;      WHEN (SMP6_B           = &apos;0&apos;&lt;br/&gt;      OR SMP6_B              = &apos;-&apos;)&lt;br/&gt;      AND Smp6_A            != &apos;-&apos;&lt;br/&gt;      AND TO_NUMBER(Smp6_A) &gt;= 0&lt;br/&gt;      THEN &apos;0,00&apos;&lt;br/&gt;      WHEN SMP6_B = &apos;-&apos;&lt;br/&gt;      AND Smp6_A  = &apos;-&apos;&lt;br/&gt;      THEN &apos;-&apos;&lt;br/&gt;      WHEN SMP6_B != &apos;-&apos;&lt;br/&gt;      AND Smp6_A   = &apos;-&apos;&lt;br/&gt;      THEN &apos;0,00&apos;&lt;br/&gt;      ELSE NVL(trim(TO_CHAR(ROUND(((SMP6_A / SMP6_B) * 100),2),&apos;999990D99&apos;)), &apos;-&apos;)&lt;br/&gt;    END                                          AS Smp6,&lt;br/&gt;    DECODE(CHAM_ENT60, 0, 0, CHAM_ENT60)       AS CHAM_ENT60,&lt;br/&gt;    DECODE(EXPURGO_TOTAL, 0, 0, EXPURGO_TOTAL) AS EXPURGO_TOTAL,&lt;br/&gt;    DECODE(OK, 0, &apos;0&apos;, OK)                       AS ok,&lt;br/&gt;    DECODE(NOK, 0, &apos;0&apos;, NOK)                     AS nok&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT TRUNC(Tab.DATA)                                                      AS Data,&lt;br/&gt;      Tab.MSC                                                                    AS Msc,&lt;br/&gt;      Tab.CN                                                                     AS CN,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.CHAM_ENT60, 0) + NVL(Tab.EXPURGO_TOTAL, 0))), &apos;-&apos;) AS Smp6_A,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK, 0)         + NVL(Tab.NOK, 0))), &apos;-&apos;)           AS SMP6_B,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.CHAM_ENT60, 0))), &apos;-&apos;)                             AS CHAM_ENT60,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.EXPURGO_TOTAL, 0))), &apos;-&apos;)                          AS EXPURGO_TOTAL,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK, 0))), &apos;-&apos;)                                     AS OK,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.NOK, 0))), &apos;-&apos;)                                    AS NOK&lt;br/&gt;    FROM dados_traducao_sem_vinculo Tab,&lt;br/&gt;    view_msc_cn_ativo_smp6 b&lt;br/&gt;    where b.msc = tab.msc&lt;br/&gt;      and b.cn = tab.cn&lt;br/&gt;      and to_date(to_char(tab.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = b.periodo&lt;br/&gt;      and b.status = &apos;T&apos;&lt;br/&gt;    GROUP BY TRUNC(Tab.DATA),&lt;br/&gt;      Tab.MSC,&lt;br/&gt;      Tab.CN&lt;br/&gt;    )&lt;br/&gt;  ),&lt;br/&gt;  agrupadores_smp_mscs AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT dados_smp_msc.Data FROM dados_smp_msc&lt;br/&gt;    ) datas,&lt;br/&gt;    (SELECT DISTINCT dados_smp_msc.Msc, dados_smp_msc.CN FROM dados_smp_msc&lt;br/&gt;    ) mscs&lt;br/&gt;  ),&lt;br/&gt;  agrupadores_por_dados AS&lt;br/&gt;  (SELECT agrupadores.Data,&lt;br/&gt;    agrupadores.Msc,&lt;br/&gt;    agrupadores.CN,&lt;br/&gt;    NVL(dados.Smp6_A, &apos;-&apos;) smp6_a,&lt;br/&gt;    NVL(dados.SMP6_B, &apos;-&apos;) smp6_b,&lt;br/&gt;    NVL(dados.Smp6, &apos;-&apos;) Smp6,&lt;br/&gt;    decode(dados.CHAM_ENT60,null,&apos;0&apos;,dados.CHAM_ENT60) CHAM_ENT60,&lt;br/&gt;    decode(dados.EXPURGO_TOTAL,null,&apos;0&apos;,dados.EXPURGO_TOTAL) EXPURGO_TOTAL,&lt;br/&gt;    decode(dados.ok,null,&apos;0&apos;,dados.ok) OK,&lt;br/&gt;    decode(dados.nok,null,&apos;0&apos;,dados.nok) NOK&lt;br/&gt;  FROM dados_smp_msc dados,&lt;br/&gt;    agrupadores_smp_mscs agrupadores&lt;br/&gt;  WHERE agrupadores.Data = dados.Data(+)&lt;br/&gt;  AND agrupadores.Msc    = dados.Msc(+)&lt;br/&gt;  AND agrupadores.CN     = dados.CN(+)&lt;br/&gt;  )&lt;br/&gt;SELECT TO_CHAR(agrupadores_por_dados.Data, &apos;dd/MM/yyyy&apos;) DATA,&lt;br/&gt;  agrupadores_por_dados.Msc,&lt;br/&gt;  agrupadores_por_dados.CN,&lt;br/&gt;  &apos;PMM&apos;                        AS PMM,&lt;br/&gt;  agrupadores_por_dados.smp6_a AS SMP_A,&lt;br/&gt;  agrupadores_por_dados.smp6_b AS SMP_B,&lt;br/&gt;  CASE&lt;br/&gt;    WHEN agrupadores_por_dados.Smp6          != &apos;-&apos;&lt;br/&gt;    AND TO_NUMBER(agrupadores_por_dados.Smp6) &gt; 100&lt;br/&gt;    THEN &apos;100,00&apos;&lt;br/&gt;    ELSE replace(agrupadores_por_dados.Smp6,&apos;.&apos;,&apos;,&apos;)&lt;br/&gt;  END                                           AS SMP,&lt;br/&gt;  TO_CHAR(agrupadores_por_dados.Data, &apos;MON-YY&apos;) AS DT_FORMATADA,&lt;br/&gt;  agrupadores_por_dados.CHAM_ENT60,&lt;br/&gt;  agrupadores_por_dados.EXPURGO_TOTAL,&lt;br/&gt;  agrupadores_por_dados.OK,&lt;br/&gt;  agrupadores_por_dados.NOK,&lt;br/&gt;  nvl((select codigo from unidade_primaria_smp6 a where a.plataforma = Agrupadores_Por_Dados.msc and a.cn = Agrupadores_Por_Dados.cn and trunc(a.ultima_atualizacao,&apos;MM&apos;) &lt;= trunc(Agrupadores_Por_Dados.Data,&apos;MM&apos;) and rownum = 1 group by codigo),&apos;NID&apos;) AS unidade_primaria,&lt;br/&gt;  nvl((select codigo from unidade_secundaria a where a.plataforma = Agrupadores_Por_Dados.msc and a.cn = Agrupadores_Por_Dados.cn and trunc(a.ultima_atualizacao,&apos;MM&apos;) &lt;= trunc(Agrupadores_Por_Dados.Data,&apos;MM&apos;) and rownum = 1 group by codigo),&apos;NID&apos;) AS unidade_secundaria,&lt;br/&gt;  nvl((select 1 from msc_cn_vinculado a where a.msc_destino = Agrupadores_Por_Dados.Msc and a.cn_destino = Agrupadores_Por_Dados.CN and trunc(a.data,&apos;MM&apos;) = trunc(Agrupadores_Por_Dados.Data,&apos;MM&apos;) and rownum = 1),0) as vinculado  &lt;br/&gt;FROM Agrupadores_Por_Dados agrupadores_por_dados&lt;br/&gt;ORDER BY 2,&lt;br/&gt;  3,&lt;br/&gt;  1,&lt;br/&gt;  4;</afterCreate>
<shouldGeneratescript>true</shouldGeneratescript>
<userDefined>true</userDefined>
<userDefinedSQL>SELECT * FROM dual</userDefinedSQL>
<layoutSQL>&lt;?xml version = &apos;1.0&apos; encoding = &apos;UTF-8&apos;?&gt;&lt;br&gt;&lt;ActiveQueryBuilderLayout&gt;&lt;SQL&gt;Select * From dual&lt;/SQL&gt;&lt;SubQueries&gt;&lt;SubQuery SQL=&quot;Select * From dual&quot;&gt;&lt;UnionSubQuery&gt;&lt;DataSource SQL=&quot;dual&quot; X=&quot;50&quot; Y=&quot;20&quot; Height=&quot;52&quot; Width=&quot;140&quot;/&gt;&lt;/UnionSubQuery&gt;&lt;/SubQuery&gt;&lt;/SubQueries&gt;&lt;/ActiveQueryBuilderLayout&gt;</layoutSQL>
<parsed>true</parsed>
<schemaObject>4557F491-498C-47A4-4FCC-3C34A06925BD</schemaObject>
</TableView>