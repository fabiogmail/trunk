<?xml version = '1.0' encoding = 'UTF-8'?>
<TableView class="oracle.dbtools.crest.model.design.relational.TableView" directorySegmentName="seg_0" id="DF3F5D9B-9D4B-2C27-1539-EA054E22B7DF" name="VIEW_SMP4_MSC">
<sourceConnName>s_metricview-u_easyview_73</sourceConnName>
<sourceObjSchema>EASYVIEW</sourceObjSchema>
<sourceObjName>VIEW_SMP4_MSC</sourceObjName>
<createdBy>osx</createdBy>
<createdTime>2013-11-25 16:32:35 UTC</createdTime>
<generatorID>Gerado pelo usu√°rio</generatorID>
<ownerDesignName>metricView</ownerDesignName>
<afterCreate>CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_SMP4_MSC&quot; (&quot;DATA&quot;, &quot;MSC&quot;, &quot;CN&quot;, &quot;PMM&quot;, &quot;SMP_A&quot;, &quot;SMP_B&quot;, &quot;SMP_C&quot;, &quot;SMP_D&quot;, &quot;SMP&quot;, &quot;DT_FORMATADA&quot;, &quot;OK1&quot;, &quot;OKVM&quot;, &quot;OK1_TCT&quot;, &quot;OK1_DRP&quot;, &quot;OK1_DRP_TCT&quot;, &quot;CHAM&quot;, &quot;SCV&quot;, &quot;INEX&quot;, &quot;NR_VM&quot;, &quot;DESL&quot;, &quot;BLO&quot;, &quot;SC&quot;, &quot;INV&quot;, &quot;BAC&quot;, &quot;OK5&quot;, &quot;OK5TCT&quot;, &quot;OK5DRP&quot;, &quot;OK5DRPTCT&quot;, &quot;LO&quot;, &quot;CO1&quot;, &quot;CO2&quot;, &quot;CO3&quot;, &quot;NR&quot;, &quot;DSA&quot;, &quot;LOS&quot;, &quot;DROP_&quot;, &quot;SRP&quot;, &quot;OU&quot;, &quot;FA1&quot;, &quot;FA2&quot;, &quot;FA3&quot;, &quot;DSS&quot;, &quot;UNIDADE_PRIMARIA&quot;, &quot;VINCULADO&quot;) AS &lt;br/&gt;  WITH dados_traducao_sem_vinculo AS&lt;br/&gt;  (SELECT DATA,&lt;br/&gt;    HORA,&lt;br/&gt;    PMM,&lt;br/&gt;    CN,&lt;br/&gt;    MSC,&lt;br/&gt;    OK1,&lt;br/&gt;    OKVM,&lt;br/&gt;    OK1_TCT,&lt;br/&gt;    OK1_DRP,&lt;br/&gt;    OK1_DRP_TCT,&lt;br/&gt;    CHAM,&lt;br/&gt;    BAC,&lt;br/&gt;    NR_VM,&lt;br/&gt;    SCV,&lt;br/&gt;    INEX,&lt;br/&gt;    DESL,&lt;br/&gt;    BLO,&lt;br/&gt;    SC,&lt;br/&gt;    INV,&lt;br/&gt;    OK5,&lt;br/&gt;    OK5TCT,&lt;br/&gt;    OK5DRP,&lt;br/&gt;    OK5DRPTCT,&lt;br/&gt;    LO,&lt;br/&gt;    CO1,&lt;br/&gt;    CO2,&lt;br/&gt;    CO3,&lt;br/&gt;    NR,&lt;br/&gt;    DSA,&lt;br/&gt;    LOS,&lt;br/&gt;    DROP_,&lt;br/&gt;    SRP,&lt;br/&gt;    OU,&lt;br/&gt;    FA1,&lt;br/&gt;    FA2,&lt;br/&gt;    FA3,&lt;br/&gt;    DSS&lt;br/&gt;  FROM view_msc_vinculo_smp4&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT DATA,&lt;br/&gt;    HORA,&lt;br/&gt;    PMM,&lt;br/&gt;    CN,&lt;br/&gt;    bilhetador_original as msc,&lt;br/&gt;    OK1,&lt;br/&gt;    OKVM,&lt;br/&gt;    OK1_TCT,&lt;br/&gt;    OK1_DRP,&lt;br/&gt;    OK1_DRP_TCT,&lt;br/&gt;    CHAM,&lt;br/&gt;    BAC,&lt;br/&gt;    NR_VM,&lt;br/&gt;    SCV,&lt;br/&gt;    INEX,&lt;br/&gt;    DESL,&lt;br/&gt;    BLO,&lt;br/&gt;    SC,&lt;br/&gt;    INV,&lt;br/&gt;    OK5,&lt;br/&gt;    OK5TCT,&lt;br/&gt;    OK5DRP,&lt;br/&gt;    OK5DRPTCT,&lt;br/&gt;    LO,&lt;br/&gt;    CO1,&lt;br/&gt;    CO2,&lt;br/&gt;    CO3,&lt;br/&gt;    NR,&lt;br/&gt;    DSA,&lt;br/&gt;    LOS,&lt;br/&gt;    DROP_,&lt;br/&gt;    SRP,&lt;br/&gt;    OU,&lt;br/&gt;    FA1,&lt;br/&gt;    FA2,&lt;br/&gt;    FA3,&lt;br/&gt;    DSS&lt;br/&gt;  FROM view_msc_vinculo_smp4&lt;br/&gt;  WHERE bilhetador_original &lt;&gt; msc&lt;br/&gt;  ),&lt;br/&gt;  dados_smp_msc AS&lt;br/&gt;  (SELECT Data,&lt;br/&gt;    Msc,&lt;br/&gt;    CN,&lt;br/&gt;    Pmm,&lt;br/&gt;    Smp4_A,&lt;br/&gt;    Smp4_B,&lt;br/&gt;    CASE&lt;br/&gt;      WHEN Smp4_B = &apos;0&apos;&lt;br/&gt;      AND Smp4_A != &apos;-&apos;&lt;br/&gt;      THEN &apos;0,00&apos;&lt;br/&gt;      WHEN Smp4_B = &apos;-&apos;&lt;br/&gt;      AND Smp4_A  = &apos;-&apos;&lt;br/&gt;      THEN &apos;-&apos;&lt;br/&gt;      WHEN Smp4_B != &apos;-&apos;&lt;br/&gt;      AND Smp4_A   = &apos;-&apos;&lt;br/&gt;      THEN &apos;0,00&apos;&lt;br/&gt;      ELSE NVL(trim(TO_CHAR(ROUND((Smp4_A * 100 / SMP4_B), 2),&apos;999990D99&apos;)), &apos;-&apos;)&lt;br/&gt;    END AS smp4,&lt;br/&gt;    OK1,&lt;br/&gt;    okvm,&lt;br/&gt;    ok1_tct,&lt;br/&gt;    ok1_drp,&lt;br/&gt;    ok1_drp_tct,&lt;br/&gt;    cham,&lt;br/&gt;    scv,&lt;br/&gt;    inex,&lt;br/&gt;    nr_vm,&lt;br/&gt;    desl,&lt;br/&gt;    blo,&lt;br/&gt;    sc,&lt;br/&gt;    inv,&lt;br/&gt;    bac,&lt;br/&gt;    okvm  AS SMP4_C,&lt;br/&gt;    nr_vm AS SMP4_D,&lt;br/&gt;    OK5,&lt;br/&gt;    OK5TCT,&lt;br/&gt;    OK5DRP,&lt;br/&gt;    OK5DRPTCT,&lt;br/&gt;    LO,&lt;br/&gt;    CO1,&lt;br/&gt;    CO2,&lt;br/&gt;    CO3,&lt;br/&gt;    NR,&lt;br/&gt;    DSA,&lt;br/&gt;    LOS,&lt;br/&gt;    DROP_,&lt;br/&gt;    SRP,&lt;br/&gt;    OU,&lt;br/&gt;    FA1,&lt;br/&gt;    FA2,&lt;br/&gt;    FA3,&lt;br/&gt;    DSS&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT TRUNC(Tab.DATA)                                                                                                                                                      AS Data,&lt;br/&gt;      pmm.NOME                                                                                                                                                                   AS Pmm,&lt;br/&gt;      Tab.MSC                                                                                                                                                                    AS Msc,&lt;br/&gt;      Tab.CN                                                                                                                                                                     AS CN,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK1, 0)   + NVL(Tab.OKVM, 0) + NVL(Tab.OK1_TCT, 0) + NVL(Tab.OK1_DRP, 0) + NVL(Tab.OK1_DRP_TCT, 0))), &apos;-&apos;)                                         AS Smp4_A,&lt;br/&gt;      NVL(TO_CHAR(SUM((NVL(Tab.CHAM, 0) - (NVL(Tab.SCV, 0) + NVL(tab.inv,0) + NVL(Tab.BAC, 0) + NVL(Tab.INEX, 0) + NVL(Tab.DESL, 0) + NVL(Tab.BLO, 0) + NVL(Tab.SC, 0))))), &apos;-&apos;) AS Smp4_B,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK1, 0))), &apos;-&apos;)                                                                                                                                    AS OK1,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OKVM, 0))), &apos;-&apos;)                                                                                                                                   AS okvm,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK1_TCT, 0))), &apos;-&apos;)                                                                                                                                AS ok1_tct,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK1_DRP, 0))), &apos;-&apos;)                                                                                                                                AS ok1_drp,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK1_DRP_TCT, 0))), &apos;-&apos;)                                                                                                                            AS ok1_drp_tct,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.CHAM, 0))), &apos;-&apos;)                                                                                                                                   AS cham,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.SCV, 0))), &apos;-&apos;)                                                                                                                                    AS scv,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.INEX, 0))), &apos;-&apos;)                                                                                                                                   AS inex,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.DESL, 0))), &apos;-&apos;)                                                                                                                                   AS desl,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.BLO, 0))), &apos;-&apos;)                                                                                                                                    AS blo,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.SC, 0))), &apos;-&apos;)                                                                                                                                     AS sc,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.BAC, 0))), &apos;-&apos;)                                                                                                                                    AS bac,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.NR_VM, 0))), &apos;-&apos;)                                                                                                                                  AS nr_vm,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.INV, 0))), &apos;-&apos;)                                                                                                                                    AS inv,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK5, 0))), &apos;-&apos;) as OK5,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK5TCT, 0))), &apos;-&apos;) as OK5TCT,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK5DRP, 0))), &apos;-&apos;) as OK5DRP,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK5DRPTCT, 0))), &apos;-&apos;) as OK5DRPTCT,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.LO, 0))), &apos;-&apos;) as LO,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.CO1, 0))), &apos;-&apos;) as CO1,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.CO2, 0))), &apos;-&apos;) as CO2,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.CO3, 0))), &apos;-&apos;) as CO3,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.NR, 0))), &apos;-&apos;) as NR,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.DSA, 0))), &apos;-&apos;) as DSA,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.LOS, 0))), &apos;-&apos;) as LOS,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.DROP_, 0))), &apos;-&apos;) as DROP_,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.SRP, 0))), &apos;-&apos;) as SRP,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OU, 0))), &apos;-&apos;) as OU,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.FA1, 0))), &apos;-&apos;) as FA1,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.FA2, 0))), &apos;-&apos;) as FA2,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.FA3, 0))), &apos;-&apos;) as FA3,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.DSS, 0))), &apos;-&apos;) as DSS&lt;br/&gt;    FROM view_msc_cn_ativo_smp4 b,&lt;br/&gt;      dados_traducao_sem_vinculo Tab&lt;br/&gt;    INNER JOIN PMM pmm&lt;br/&gt;    ON Tab.HORA BETWEEN pmm.INICIO AND pmm.FIM&lt;br/&gt;    WHERE tab.msc                                      = b.msc&lt;br/&gt;    AND tab.cn                                         = b.cn&lt;br/&gt;    AND to_date(TO_CHAR(tab.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = b.periodo&lt;br/&gt;    AND b.status                                       = &apos;T&apos;&lt;br/&gt;    GROUP BY TRUNC(Tab.DATA),&lt;br/&gt;      pmm.NOME,&lt;br/&gt;      Tab.MSC,&lt;br/&gt;      Tab.CN&lt;br/&gt;    )&lt;br/&gt;  ),&lt;br/&gt;  agrupadores_smp_mscs AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT dados_smp_msc.Data FROM dados_smp_msc&lt;br/&gt;    ) datas,&lt;br/&gt;    (SELECT DISTINCT dados_smp_msc.Pmm FROM dados_smp_msc&lt;br/&gt;    ) pmms,&lt;br/&gt;    (SELECT DISTINCT dados_smp_msc.Msc, dados_smp_msc.CN FROM dados_smp_msc&lt;br/&gt;    ) mscs&lt;br/&gt;  ),&lt;br/&gt;  agrupadores_por_dados AS&lt;br/&gt;  (SELECT agrupadores.Data,&lt;br/&gt;    agrupadores.Msc,&lt;br/&gt;    agrupadores.CN,&lt;br/&gt;    agrupadores.Pmm,&lt;br/&gt;    NVL(dados.Smp4_A, 0) smp4_a,&lt;br/&gt;    NVL(dados.Smp4_B, 0) smp4_b,&lt;br/&gt;    NVL(dados.Smp4_C, 0) smp4_c,&lt;br/&gt;    NVL(dados.Smp4_D, 0) smp4_d,&lt;br/&gt;    NVL(dados.smp4, 0) Smp4,&lt;br/&gt;    NVL(dados.OK1, &apos;0&apos;) ok1,&lt;br/&gt;    NVL(dados.okvm, &apos;0&apos;) okvm,&lt;br/&gt;    NVL(dados.ok1_tct, &apos;0&apos;) ok1_tct,&lt;br/&gt;    NVL(dados.ok1_drp, &apos;0&apos;) ok1_drp,&lt;br/&gt;    NVL(dados.ok1_drp_tct, &apos;0&apos;) ok1_drp_tct,&lt;br/&gt;    NVL(dados.cham, &apos;0&apos;) cham,&lt;br/&gt;    NVL(dados.scv, &apos;0&apos;) scv,&lt;br/&gt;    NVL(dados.inex, &apos;0&apos;) inex,&lt;br/&gt;    NVL(dados.nr_vm, &apos;0&apos;) nr_vm,&lt;br/&gt;    NVL(dados.desl, &apos;0&apos;) desl,&lt;br/&gt;    NVL(dados.blo, &apos;0&apos;) blo,&lt;br/&gt;    NVL(dados.sc, &apos;0&apos;) sc,&lt;br/&gt;    NVL(dados.inv, &apos;0&apos;) inv,&lt;br/&gt;    NVL(dados.bac, &apos;0&apos;) bac,&lt;br/&gt;    NVL(dados.OK5, &apos;0&apos;) OK5,&lt;br/&gt;    NVL(dados.OK5TCT, &apos;0&apos;) OK5TCT,&lt;br/&gt;    NVL(dados.OK5DRP, &apos;0&apos;) OK5DRP,&lt;br/&gt;    NVL(dados.OK5DRPTCT, &apos;0&apos;) OK5DRPTCT,&lt;br/&gt;    NVL(dados.LO, &apos;0&apos;) LO,&lt;br/&gt;    NVL(dados.CO1, &apos;0&apos;) CO1,&lt;br/&gt;    NVL(dados.CO2, &apos;0&apos;) CO2,&lt;br/&gt;    NVL(dados.CO3, &apos;0&apos;) CO3,&lt;br/&gt;    NVL(dados.NR, &apos;0&apos;) NR,&lt;br/&gt;    NVL(dados.DSA, &apos;0&apos;) DSA,&lt;br/&gt;    NVL(dados.LOS, &apos;0&apos;) LOS,&lt;br/&gt;    NVL(dados.DROP_, &apos;0&apos;) DROP_,&lt;br/&gt;    NVL(dados.SRP, &apos;0&apos;) SRP,&lt;br/&gt;    NVL(dados.OU, &apos;0&apos;) OU,&lt;br/&gt;    NVL(dados.FA1, &apos;0&apos;) FA1,&lt;br/&gt;    NVL(dados.FA2, &apos;0&apos;) FA2,&lt;br/&gt;    NVL(dados.FA3, &apos;0&apos;) FA3,&lt;br/&gt;    NVL(dados.DSS, &apos;0&apos;) DSS&lt;br/&gt;  FROM dados_smp_msc dados,&lt;br/&gt;    agrupadores_smp_mscs agrupadores&lt;br/&gt;  WHERE agrupadores.Data = dados.Data(+)&lt;br/&gt;  AND agrupadores.Pmm    = dados.Pmm(+)&lt;br/&gt;  AND agrupadores.Msc    = dados.Msc(+)&lt;br/&gt;  AND agrupadores.CN     = dados.CN(+)&lt;br/&gt;  )&lt;br/&gt;SELECT TO_CHAR(Agrupadores_Por_Dados.Data, &apos;dd/MM/yyyy&apos;) DATA,&lt;br/&gt;  Agrupadores_Por_Dados.Msc,&lt;br/&gt;  Agrupadores_Por_Dados.CN,&lt;br/&gt;  Agrupadores_Por_Dados.Pmm,&lt;br/&gt;  TO_CHAR(Agrupadores_Por_Dados.smp4_a) AS SMP_A,&lt;br/&gt;  TO_CHAR(Agrupadores_Por_Dados.smp4_b) AS SMP_B,&lt;br/&gt;  TO_CHAR(Agrupadores_Por_Dados.smp4_c) AS SMP_C,&lt;br/&gt;  TO_CHAR(Agrupadores_Por_Dados.smp4_d) AS SMP_D,&lt;br/&gt;  CASE&lt;br/&gt;    WHEN Agrupadores_Por_Dados.Smp4          != &apos;-&apos;&lt;br/&gt;    AND TO_NUMBER(Agrupadores_Por_Dados.Smp4) &gt; 100&lt;br/&gt;    THEN &apos;100,00&apos;&lt;br/&gt;    ELSE REPLACE(Agrupadores_Por_Dados.Smp4,&apos;.&apos;,&apos;,&apos;)&lt;br/&gt;  END                                           AS SMP,&lt;br/&gt;  TO_CHAR(Agrupadores_Por_Dados.Data, &apos;MON-YY&apos;) AS DT_FORMATADA,&lt;br/&gt;  Agrupadores_Por_Dados.ok1,&lt;br/&gt;  Agrupadores_Por_Dados.okvm,&lt;br/&gt;  Agrupadores_Por_Dados.ok1_tct,&lt;br/&gt;  Agrupadores_Por_Dados.ok1_drp,&lt;br/&gt;  Agrupadores_Por_Dados.ok1_drp_tct,&lt;br/&gt;  Agrupadores_Por_Dados.cham,&lt;br/&gt;  Agrupadores_Por_Dados.scv,&lt;br/&gt;  Agrupadores_Por_Dados.inex,&lt;br/&gt;  Agrupadores_Por_Dados.nr_vm,&lt;br/&gt;  Agrupadores_Por_Dados.desl,&lt;br/&gt;  Agrupadores_Por_Dados.blo,&lt;br/&gt;  Agrupadores_Por_Dados.sc,&lt;br/&gt;  Agrupadores_Por_Dados.inv,&lt;br/&gt;  Agrupadores_Por_Dados.bac,&lt;br/&gt;  Agrupadores_Por_Dados.OK5,&lt;br/&gt;  Agrupadores_Por_Dados.OK5TCT,&lt;br/&gt;  Agrupadores_Por_Dados.OK5DRP,&lt;br/&gt;  Agrupadores_Por_Dados.OK5DRPTCT,&lt;br/&gt;  Agrupadores_Por_Dados.LO,&lt;br/&gt;  Agrupadores_Por_Dados.CO1,&lt;br/&gt;  Agrupadores_Por_Dados.CO2,&lt;br/&gt;  Agrupadores_Por_Dados.CO3,&lt;br/&gt;  Agrupadores_Por_Dados.NR,&lt;br/&gt;  Agrupadores_Por_Dados.DSA,&lt;br/&gt;  Agrupadores_Por_Dados.LOS,&lt;br/&gt;  Agrupadores_Por_Dados.DROP_,&lt;br/&gt;  Agrupadores_Por_Dados.SRP,&lt;br/&gt;  Agrupadores_Por_Dados.OU,&lt;br/&gt;  Agrupadores_Por_Dados.FA1,&lt;br/&gt;  Agrupadores_Por_Dados.FA2,&lt;br/&gt;  Agrupadores_Por_Dados.FA3,&lt;br/&gt;  Agrupadores_Por_Dados.DSS,&lt;br/&gt;  NVL(&lt;br/&gt;  (SELECT codigo&lt;br/&gt;  FROM msc_cn_codigo a&lt;br/&gt;  WHERE a.msc                           = Agrupadores_Por_Dados.msc&lt;br/&gt;  AND a.cn                              = Agrupadores_Por_Dados.cn&lt;br/&gt;  AND TRUNC(a.ultima_atualizacao,&apos;MM&apos;) &lt;= TRUNC(Agrupadores_Por_Dados.Data,&apos;MM&apos;)&lt;br/&gt;  AND rownum                            = 1&lt;br/&gt;  GROUP BY codigo&lt;br/&gt;  ),&apos;NID&apos;) AS unidade_primaria,&lt;br/&gt;  NVL(&lt;br/&gt;  (SELECT 1&lt;br/&gt;  FROM msc_cn_vinculado a&lt;br/&gt;  WHERE a.msc_destino    = Agrupadores_Por_Dados.Msc&lt;br/&gt;  AND a.cn_destino       = Agrupadores_Por_Dados.CN&lt;br/&gt;  AND TRUNC(a.data,&apos;MM&apos;) = TRUNC(Agrupadores_Por_Dados.Data,&apos;MM&apos;)&lt;br/&gt;  AND ROWNUM             = 1&lt;br/&gt;  ),0) AS vinculado&lt;br/&gt;FROM Agrupadores_Por_Dados&lt;br/&gt;ORDER BY 2,3,1,4;</afterCreate>
<shouldGeneratescript>true</shouldGeneratescript>
<userDefined>true</userDefined>
<userDefinedSQL>SELECT * FROM dual</userDefinedSQL>
<layoutSQL>&lt;?xml version = &apos;1.0&apos; encoding = &apos;UTF-8&apos;?&gt;&lt;br&gt;&lt;ActiveQueryBuilderLayout&gt;&lt;SQL&gt;Select * From dual&lt;/SQL&gt;&lt;SubQueries&gt;&lt;SubQuery SQL=&quot;Select * From dual&quot;&gt;&lt;UnionSubQuery&gt;&lt;DataSource SQL=&quot;dual&quot; X=&quot;50&quot; Y=&quot;20&quot; Height=&quot;52&quot; Width=&quot;140&quot;/&gt;&lt;/UnionSubQuery&gt;&lt;/SubQuery&gt;&lt;/SubQueries&gt;&lt;/ActiveQueryBuilderLayout&gt;</layoutSQL>
<parsed>true</parsed>
<schemaObject>4557F491-498C-47A4-4FCC-3C34A06925BD</schemaObject>
</TableView>