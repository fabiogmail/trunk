<?xml version = '1.0' encoding = 'UTF-8'?>
<TableView class="oracle.dbtools.crest.model.design.relational.TableView" directorySegmentName="seg_0" id="7D6BE6CD-3DE5-5867-73B9-90187BE1237A" name="VIEW_CRIADORA">
<createdBy>osx</createdBy>
<createdTime>2013-11-27 23:17:51 UTC</createdTime>
<generatorID>Gerado pelo usu√°rio</generatorID>
<ownerDesignName>metricView</ownerDesignName>
<beforeCreate>CREATE OR REPLACE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_SMP10_SMP11_DADOS&quot; AS &lt;br/&gt;  SELECT TO_CHAR(to_date(&apos;01/&apos;||mes||&apos;/&apos;||ano,&apos;dd/MM/yyyy&apos;),&apos;MM/yyyy&apos;) data,&lt;br/&gt;         uf.unidade_primaria, &lt;br/&gt;         uf.uf,&lt;br/&gt;         uf.regional,&lt;br/&gt;         uf.diretoria_regional,&lt;br/&gt;         sum(nvl(campo_39,0)) as campo_39 ,&lt;br/&gt;         sum(nvl(campo_40,0)) as campo_40,&lt;br/&gt;         sum(nvl(campo_41,0)) as campo_41,&lt;br/&gt;         sum(nvl(campo_42,0)) as campo_42&lt;br/&gt; FROM cdrview_smp10_11 dados,&lt;br/&gt;      uf_codigo_regional uf&lt;br/&gt;where dados.unidade_primaria = uf.unidade_primaria&lt;br/&gt;group by TO_CHAR(to_date(&apos;01/&apos;||mes||&apos;/&apos;||ano,&apos;dd/MM/yyyy&apos;),&apos;MM/yyyy&apos;),&lt;br/&gt;         uf.unidade_primaria, &lt;br/&gt;         uf.uf,&lt;br/&gt;         uf.regional,&lt;br/&gt;         uf.diretoria_regional&lt;br/&gt;order by 1,2;</beforeCreate>
<endOfScript>CREATE OR REPLACE VIEW EASYVIEW.VIEW_SMP3_EXPORTACAO_ANATEL ( SMP, DDX, CONSOLIDACAO, PRIMARIA, PONDERACAO, VAL_PONDERACAO, COLETA, INDICE_14, VAL_INDICE_14, INDICE_15, VAL_INDICE_15, INDICE_17, VAL_INDICE_17, INDICE_18, VAL_INDICE_18, INDICE_19, VAL_INDICE_19, INDICE_20, VAL_INDICE_20, INDICE_22, VAL_INDICE_22, INDICE_23, VAL_INDICE_23, INDICE_24, VAL_INDICE_24, INDICE_25, VAL_INDICE_25, INDICE_27, VAL_INDICE_27, INDICE_28, VAL_INDICE_28, INDICE_30, VAL_INDICE_30, INDICE_31, VAL_INDICE_31, INDICE_33, VAL_INDICE_33, INDICE_34, VAL_INDICE_34, INDICE_36, VAL_INDICE_36, INDICE_37, VAL_INDICE_37 )&lt;br/&gt;                     AS&lt;br/&gt;WITH dados_x_codigos AS&lt;br/&gt;  (SELECT c.data,&lt;br/&gt;    c.hora,&lt;br/&gt;    c.pmm,&lt;br/&gt;    c.cn,&lt;br/&gt;    c.bilhetador_original,&lt;br/&gt;    c.msc,&lt;br/&gt;    c.scv,&lt;br/&gt;    c.cham,&lt;br/&gt;    c.inv,&lt;br/&gt;    c.okt,&lt;br/&gt;    c.codigo&lt;br/&gt;  FROM view_msc_vinculo_smp3 c,&lt;br/&gt;    view_msc_cn_ativo_smp3 v&lt;br/&gt;  WHERE v.CN                                       = c.CN&lt;br/&gt;  AND v.MSC                                        = c.MSC&lt;br/&gt;  AND to_date(TO_CHAR(c.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = v.PERIODO&lt;br/&gt;  AND v.status                                     = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  codigos_sem_dados AS&lt;br/&gt;  ( SELECT DISTINCT codigo.msc,&lt;br/&gt;    codigo.cn&lt;br/&gt;  FROM msc_cn_codigo codigo,&lt;br/&gt;    ( SELECT DISTINCT bilhetador.nome&lt;br/&gt;    FROM indicador,&lt;br/&gt;      TIPO_TECNOLOGIA,&lt;br/&gt;      TECNOLOGIA,&lt;br/&gt;      BILHETADOR&lt;br/&gt;    WHERE indicador.nome                  IN (&apos;SMP3&apos;,&apos;SMP4&apos;,&apos;SMP5&apos;,&apos;SMP7&apos;)&lt;br/&gt;    AND TECNOLOGIA.ID_TIPO_TECNOLOGIA      = indicador.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TIPO_TECNOLOGIA.ID_TIPO_TECNOLOGIA = TECNOLOGIA.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TECNOLOGIA.ID                      = BILHETADOR.ID_TECNOLOGIA&lt;br/&gt;    ) bilhetador&lt;br/&gt;  WHERE codigo.msc = bilhetador.nome&lt;br/&gt;  MINUS&lt;br/&gt;  SELECT DISTINCT msc, TO_CHAR(cn) FROM dados_x_codigos&lt;br/&gt;  ),&lt;br/&gt;  distinct_msc_cn_x_pmm AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;    ) datas,&lt;br/&gt;    (SELECT DISTINCT msc, TO_CHAR(cn) cn FROM dados_x_codigos&lt;br/&gt;    ) msc,&lt;br/&gt;    (SELECT DISTINCT pmm FROM dados_x_codigos&lt;br/&gt;    ) pmm&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT data,&lt;br/&gt;      msc,&lt;br/&gt;      TO_CHAR(cn) cn&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT DISTINCT data,&lt;br/&gt;        msc,&lt;br/&gt;        cn&lt;br/&gt;      FROM codigos_sem_dados,&lt;br/&gt;        (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;        )&lt;br/&gt;      )&lt;br/&gt;    ) msc,&lt;br/&gt;    (SELECT DISTINCT pmm FROM dados_x_codigos&lt;br/&gt;    ) pmm&lt;br/&gt;  ),&lt;br/&gt;  dados_trabalhados AS&lt;br/&gt;  (SELECT d.data,&lt;br/&gt;    d.pmm,&lt;br/&gt;    d.cn,&lt;br/&gt;    d.msc,&lt;br/&gt;    NVL(p.scv,0) scv,&lt;br/&gt;    NVL(p.cham,0) cham,&lt;br/&gt;    NVL(p.inv,0) inv,&lt;br/&gt;    NVL(p.okt,0) AS okt,&lt;br/&gt;    NVL(&lt;br/&gt;    (SELECT codigo&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT * FROM msc_cn_codigo b ORDER BY msc, cn, ultima_atualizacao&lt;br/&gt;      ) b&lt;br/&gt;    WHERE d.msc             = b.msc&lt;br/&gt;    AND d.cn                = b.cn&lt;br/&gt;    AND TRUNC(d.data,&apos;MM&apos;) &gt;= TRUNC(b.ultima_atualizacao,&apos;MM&apos;)&lt;br/&gt;    AND rownum              = 1&lt;br/&gt;    ) ,&apos;NID&apos;) AS codigo&lt;br/&gt;  FROM distinct_msc_cn_x_pmm d,&lt;br/&gt;    dados_x_codigos p,&lt;br/&gt;    view_msc_cn_ativo_smp3 cnAtivo&lt;br/&gt;  WHERE d.msc                                               = p.msc (+)&lt;br/&gt;  AND d.cn                                                  = p.cn (+)&lt;br/&gt;  AND d.pmm                                                 = p.pmm (+)&lt;br/&gt;  AND TRUNC(d.data)                                         = TRUNC(p.data (+))&lt;br/&gt;  AND cnAtivo.msc                                           = d.msc&lt;br/&gt;  AND cnAtivo.cn                                            = d.cn&lt;br/&gt;  AND to_date(TO_CHAR(cnAtivo.periodo,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = to_date(TO_CHAR(d.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;)&lt;br/&gt;  AND cnAtivo.status                                        = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  dados_smp3 AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT &apos;SMP3&apos;                               AS SMP,&lt;br/&gt;      TO_CHAR(ddx.data,&apos;MM/yyyy&apos;)                AS DDX,&lt;br/&gt;      NULL                                       AS CONSOLIDACAO,&lt;br/&gt;      DECODE(c.codigo,NULL,&apos;NID&apos;, c.codigo)      AS PRIMARIA,&lt;br/&gt;      DECODE(pmm.nome,&apos;PMM1&apos;,&apos;016&apos;,&apos;054&apos;)        AS PONDERACAO,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(CHAM-SCV-INV,0))),&apos;-&apos;) AS val_ponderacao,&lt;br/&gt;      DECODE(pmm.nome,&apos;PMM1&apos;,&apos;01&apos;,&apos;02&apos;)          AS COLETA,&lt;br/&gt;      &apos;14&apos;                                       AS indice_14,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(OKT,0))),&apos;-&apos;)          AS val_indice_14,&lt;br/&gt;      &apos;15&apos;                                       AS indice_15,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(CHAM-SCV-INV,0))),&apos;-&apos;) AS val_indice_15,&lt;br/&gt;      &apos;&apos;                                         AS indice_17,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_17,&lt;br/&gt;      &apos;&apos;                                         AS indice_18,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_18,&lt;br/&gt;      &apos;&apos;                                         AS indice_19,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_19,&lt;br/&gt;      &apos;&apos;                                         AS indice_20,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_20,&lt;br/&gt;      &apos;&apos;                                         AS indice_22,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_22,&lt;br/&gt;      &apos;&apos;                                         AS indice_23,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_23,&lt;br/&gt;      &apos;&apos;                                         AS indice_24,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_24,&lt;br/&gt;      &apos;&apos;                                         AS indice_25,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_25,&lt;br/&gt;      &apos;&apos;                                         AS indice_27,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_27,&lt;br/&gt;      &apos;&apos;                                         AS indice_28,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_28,&lt;br/&gt;      &apos;&apos;                                         AS indice_30,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_30,&lt;br/&gt;      &apos;&apos;                                         AS indice_31,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_31,&lt;br/&gt;      &apos;&apos;                                         AS indice_33,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_33,&lt;br/&gt;      &apos;&apos;                                         AS indice_34,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_34,&lt;br/&gt;      &apos;&apos;                                         AS indice_36,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_36,&lt;br/&gt;      &apos;&apos;                                         AS indice_37,&lt;br/&gt;      &apos;&apos;                                         AS val_indice_37&lt;br/&gt;    FROM dados_trabalhados c,&lt;br/&gt;      ddx ddx,&lt;br/&gt;      pmm pmm&lt;br/&gt;    WHERE TO_CHAR(c.data,&apos;dd/MM/yyyy&apos;) = TO_CHAR(ddx.data,&apos;dd/MM/yyyy&apos;)&lt;br/&gt;    AND pmm.nome                       = c.pmm&lt;br/&gt;    GROUP BY &apos;SMP3&apos;,&lt;br/&gt;      TO_CHAR(ddx.data,&apos;MM/yyyy&apos;),&lt;br/&gt;      NULL,&lt;br/&gt;      c.codigo,&lt;br/&gt;      pmm.nome,&lt;br/&gt;      &apos;14&apos;,&lt;br/&gt;      &apos;15&apos;&lt;br/&gt;    ORDER BY primaria&lt;br/&gt;    )&lt;br/&gt;  WHERE primaria != &apos;NID&apos;&lt;br/&gt;  )&lt;br/&gt;SELECT &quot;SMP&quot;,&lt;br/&gt;  &quot;DDX&quot;,&lt;br/&gt;  &quot;CONSOLIDACAO&quot;,&lt;br/&gt;  &quot;PRIMARIA&quot;,&lt;br/&gt;  &quot;PONDERACAO&quot;,&lt;br/&gt;  &quot;VAL_PONDERACAO&quot;,&lt;br/&gt;  &quot;COLETA&quot;,&lt;br/&gt;  &quot;INDICE_14&quot;,&lt;br/&gt;  &quot;VAL_INDICE_14&quot;,&lt;br/&gt;  &quot;INDICE_15&quot;,&lt;br/&gt;  &quot;VAL_INDICE_15&quot;,&lt;br/&gt;  &quot;INDICE_17&quot;,&lt;br/&gt;  &quot;VAL_INDICE_17&quot;,&lt;br/&gt;  &quot;INDICE_18&quot;,&lt;br/&gt;  &quot;VAL_INDICE_18&quot;,&lt;br/&gt;  &quot;INDICE_19&quot;,&lt;br/&gt;  &quot;VAL_INDICE_19&quot;,&lt;br/&gt;  &quot;INDICE_20&quot;,&lt;br/&gt;  &quot;VAL_INDICE_20&quot;,&lt;br/&gt;  &quot;INDICE_22&quot;,&lt;br/&gt;  &quot;VAL_INDICE_22&quot;,&lt;br/&gt;  &quot;INDICE_23&quot;,&lt;br/&gt;  &quot;VAL_INDICE_23&quot;,&lt;br/&gt;  &quot;INDICE_24&quot;,&lt;br/&gt;  &quot;VAL_INDICE_24&quot;,&lt;br/&gt;  &quot;INDICE_25&quot;,&lt;br/&gt;  &quot;VAL_INDICE_25&quot;,&lt;br/&gt;  &quot;INDICE_27&quot;,&lt;br/&gt;  &quot;VAL_INDICE_27&quot;,&lt;br/&gt;  &quot;INDICE_28&quot;,&lt;br/&gt;  &quot;VAL_INDICE_28&quot;,&lt;br/&gt;  &quot;INDICE_30&quot;,&lt;br/&gt;  &quot;VAL_INDICE_30&quot;,&lt;br/&gt;  &quot;INDICE_31&quot;,&lt;br/&gt;  &quot;VAL_INDICE_31&quot;,&lt;br/&gt;  &quot;INDICE_33&quot;,&lt;br/&gt;  &quot;VAL_INDICE_33&quot;,&lt;br/&gt;  &quot;INDICE_34&quot;,&lt;br/&gt;  &quot;VAL_INDICE_34&quot;,&lt;br/&gt;  &quot;INDICE_36&quot;,&lt;br/&gt;  &quot;VAL_INDICE_36&quot;,&lt;br/&gt;  &quot;INDICE_37&quot;,&lt;br/&gt;  &quot;VAL_INDICE_37&quot;&lt;br/&gt;FROM dados_smp3 ;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE VIEW EASYVIEW.VIEW_SMP4_EXPORTACAO_ANATEL ( SMP, DDX, CONSOLIDACAO, PRIMARIA, PONDERACAO, VAL_PONDERACAO, COLETA, INDICE_14, VAL_INDICE_14, INDICE_15, VAL_INDICE_15, INDICE_17, VAL_INDICE_17, INDICE_18, VAL_INDICE_18, INDICE_19, VAL_INDICE_19, INDICE_20, VAL_INDICE_20, INDICE_22, VAL_INDICE_22, INDICE_23, VAL_INDICE_23, INDICE_24, VAL_INDICE_24, INDICE_25, VAL_INDICE_25, INDICE_27, VAL_INDICE_27, INDICE_28, VAL_INDICE_28, INDICE_30, VAL_INDICE_30, INDICE_31, VAL_INDICE_31, INDICE_33, VAL_INDICE_33, INDICE_34, VAL_INDICE_34, INDICE_36, VAL_INDICE_36, INDICE_37, VAL_INDICE_37 )&lt;br/&gt;                     AS&lt;br/&gt;WITH dados_x_codigos AS&lt;br/&gt;  (SELECT c.DATA,&lt;br/&gt;    c.HORA,&lt;br/&gt;    c.PMM,&lt;br/&gt;    c.CN,&lt;br/&gt;    c.bilhetador_original,&lt;br/&gt;    c.MSC,&lt;br/&gt;    c.OK1,&lt;br/&gt;    c.OKVM,&lt;br/&gt;    c.OK1_TCT,&lt;br/&gt;    c.OK1_DRP,&lt;br/&gt;    c.OK1_DRP_TCT,&lt;br/&gt;    c.CHAM,&lt;br/&gt;    c.BAC,&lt;br/&gt;    c.NR_VM,&lt;br/&gt;    c.SCV,&lt;br/&gt;    c.INEX,&lt;br/&gt;    c.DESL,&lt;br/&gt;    c.BLO,&lt;br/&gt;    c.SC,&lt;br/&gt;    c.inv,&lt;br/&gt;    c.codigo&lt;br/&gt;  FROM view_msc_vinculo_smp4 c,&lt;br/&gt;    view_msc_cn_ativo_smp4 v&lt;br/&gt;  WHERE v.CN                                       = c.CN&lt;br/&gt;  AND v.MSC                                        = c.MSC&lt;br/&gt;  AND to_date(TO_CHAR(c.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = v.PERIODO&lt;br/&gt;  AND v.status                                     = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  codigos_sem_dados AS&lt;br/&gt;  ( SELECT DISTINCT codigo.msc,&lt;br/&gt;    codigo.cn&lt;br/&gt;  FROM msc_cn_codigo codigo,&lt;br/&gt;    ( SELECT DISTINCT bilhetador.nome&lt;br/&gt;    FROM indicador,&lt;br/&gt;      TIPO_TECNOLOGIA,&lt;br/&gt;      TECNOLOGIA,&lt;br/&gt;      BILHETADOR&lt;br/&gt;    WHERE indicador.nome                  IN (&apos;SMP3&apos;,&apos;SMP4&apos;,&apos;SMP5&apos;,&apos;SMP7&apos;)&lt;br/&gt;    AND TECNOLOGIA.ID_TIPO_TECNOLOGIA      = indicador.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TIPO_TECNOLOGIA.ID_TIPO_TECNOLOGIA = TECNOLOGIA.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TECNOLOGIA.ID                      = BILHETADOR.ID_TECNOLOGIA&lt;br/&gt;    ) bilhetador&lt;br/&gt;  WHERE codigo.msc = bilhetador.nome&lt;br/&gt;  MINUS&lt;br/&gt;  SELECT DISTINCT msc, TO_CHAR(cn) FROM dados_x_codigos&lt;br/&gt;  ),&lt;br/&gt;  distinct_msc_cn_x_pmm AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;    ) datas,&lt;br/&gt;    (SELECT DISTINCT msc, TO_CHAR(cn) cn FROM dados_x_codigos&lt;br/&gt;    ) msc,&lt;br/&gt;    (SELECT DISTINCT pmm FROM dados_x_codigos&lt;br/&gt;    ) pmm&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT data,&lt;br/&gt;      msc,&lt;br/&gt;      TO_CHAR(cn) cn&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT DISTINCT data,&lt;br/&gt;        msc,&lt;br/&gt;        cn&lt;br/&gt;      FROM codigos_sem_dados,&lt;br/&gt;        (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;        )&lt;br/&gt;      )&lt;br/&gt;    ) msc,&lt;br/&gt;    (SELECT DISTINCT pmm FROM dados_x_codigos&lt;br/&gt;    ) pmm&lt;br/&gt;  ),&lt;br/&gt;  dados_trabalhados AS&lt;br/&gt;  (SELECT d.data,&lt;br/&gt;    d.pmm,&lt;br/&gt;    d.cn,&lt;br/&gt;    d.msc,&lt;br/&gt;    NVL(p.OK1,0) ok1,&lt;br/&gt;    NVL(p.OKVM,0) okvm,&lt;br/&gt;    NVL(p.OK1_TCT,0) ok1_tct,&lt;br/&gt;    NVL(p.OK1_DRP,0) ok1_drp,&lt;br/&gt;    NVL(p.OK1_DRP_TCT,0) ok1_drp_tct,&lt;br/&gt;    NVL(p.CHAM,0) cham,&lt;br/&gt;    NVL(p.BAC,0) bac,&lt;br/&gt;    NVL(p.NR_VM,0) nr_vm,&lt;br/&gt;    NVL(p.SCV,0) scv,&lt;br/&gt;    NVL(p.INEX,0) inex,&lt;br/&gt;    NVL(p.DESL,0) desl,&lt;br/&gt;    NVL(p.BLO,0) blo,&lt;br/&gt;    NVL(p.SC,0) sc,&lt;br/&gt;    NVL(p.inv,0) inv,&lt;br/&gt;    NVL(&lt;br/&gt;    (SELECT codigo&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT * FROM msc_cn_codigo b ORDER BY msc, cn, ultima_atualizacao&lt;br/&gt;      ) b&lt;br/&gt;    WHERE d.msc             = b.msc&lt;br/&gt;    AND d.cn                = b.cn&lt;br/&gt;    AND TRUNC(d.data,&apos;MM&apos;) &gt;= TRUNC(b.ultima_atualizacao,&apos;MM&apos;)&lt;br/&gt;    AND rownum              = 1&lt;br/&gt;    ) ,&apos;NID&apos;) AS codigo&lt;br/&gt;  FROM distinct_msc_cn_x_pmm d,&lt;br/&gt;    dados_x_codigos p,&lt;br/&gt;    view_msc_cn_ativo_smp4 cnAtivo&lt;br/&gt;  WHERE d.msc                                               = p.msc (+)&lt;br/&gt;  AND d.cn                                                  = p.cn (+)&lt;br/&gt;  AND d.pmm                                                 = p.pmm (+)&lt;br/&gt;  AND TRUNC(d.data)                                         = TRUNC(p.data (+))&lt;br/&gt;  AND cnAtivo.msc                                           = d.msc&lt;br/&gt;  AND cnAtivo.cn                                            = d.cn&lt;br/&gt;  AND to_date(TO_CHAR(cnAtivo.periodo,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = to_date(TO_CHAR(d.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;)&lt;br/&gt;  AND cnAtivo.status                                        = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  dados_smp4 AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT &apos;SMP4&apos;                                                                                           AS SMP,&lt;br/&gt;      TO_CHAR(ddx.data,&apos;MM/yyyy&apos;)                                                                            AS DDX,&lt;br/&gt;      NULL                                                                                                   AS CONSOLIDACAO,&lt;br/&gt;      DECODE(c.codigo,NULL,&apos;NID&apos;, c.codigo)                                                                  AS PRIMARIA,&lt;br/&gt;      DECODE(pmm.nome,&apos;PMM1&apos;,&apos;021&apos;,&apos;055&apos;)                                                                    AS PONDERACAO,&lt;br/&gt;      NVL(TO_CHAR(SUM((CHAM - (SCV + BAC + INEX + DESL + BLO + SC + INV)))),&apos;-&apos;)                             AS val_ponderacao,&lt;br/&gt;      DECODE(pmm.nome,&apos;PMM1&apos;,&apos;01&apos;,&apos;02&apos;)                                                                      AS COLETA,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_14,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_14,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_15,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_15,&lt;br/&gt;      &apos;17&apos;                                                                                                   AS indice_17,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(OK1,0) + NVL(OKVM,0) + NVL(OK1_TCT,0) + NVL(OK1_DRP,0) + NVL(OK1_DRP_TCT,0))),&apos;-&apos;) AS val_indice_17,&lt;br/&gt;      &apos;18&apos;                                                                                                   AS indice_18,&lt;br/&gt;      NVL(TO_CHAR(SUM((CHAM - (SCV + BAC + INEX + DESL + BLO + SC + INV)))),&apos;-&apos;)                             AS val_indice_18,&lt;br/&gt;      &apos;19&apos;                                                                                                   AS indice_19,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(OKVM,0))),&apos;-&apos;)                                                                     AS val_indice_19,&lt;br/&gt;      &apos;20&apos;                                                                                                   AS indice_20,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(NR_VM,0))),&apos;-&apos;)                                                                    AS val_indice_20,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_22,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_22,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_23,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_23,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_24,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_24,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_25,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_25,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_27,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_27,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_28,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_28,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_30,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_30,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_31,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_31,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_33,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_33,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_34,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_34,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_36,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_36,&lt;br/&gt;      &apos;&apos;                                                                                                     AS indice_37,&lt;br/&gt;      &apos;&apos;                                                                                                     AS val_indice_37&lt;br/&gt;    FROM dados_trabalhados c,&lt;br/&gt;      ddx ddx,&lt;br/&gt;      pmm pmm&lt;br/&gt;    WHERE TO_CHAR(c.data,&apos;dd/MM/yyyy&apos;) = TO_CHAR(ddx.data,&apos;dd/MM/yyyy&apos;)&lt;br/&gt;    AND pmm.nome                       = c.pmm&lt;br/&gt;    GROUP BY &apos;SMP4&apos;,&lt;br/&gt;      TO_CHAR(ddx.data,&apos;MM/yyyy&apos;),&lt;br/&gt;      NULL,&lt;br/&gt;      c.codigo,&lt;br/&gt;      pmm.nome,&lt;br/&gt;      &apos;17&apos;,&lt;br/&gt;      &apos;18&apos;,&lt;br/&gt;      &apos;19&apos;,&lt;br/&gt;      &apos;20&apos;&lt;br/&gt;    ORDER BY primaria&lt;br/&gt;    )&lt;br/&gt;  WHERE primaria != &apos;NID&apos;&lt;br/&gt;  )&lt;br/&gt;SELECT &quot;SMP&quot;,&lt;br/&gt;  &quot;DDX&quot;,&lt;br/&gt;  &quot;CONSOLIDACAO&quot;,&lt;br/&gt;  &quot;PRIMARIA&quot;,&lt;br/&gt;  &quot;PONDERACAO&quot;,&lt;br/&gt;  &quot;VAL_PONDERACAO&quot;,&lt;br/&gt;  &quot;COLETA&quot;,&lt;br/&gt;  &quot;INDICE_14&quot;,&lt;br/&gt;  &quot;VAL_INDICE_14&quot;,&lt;br/&gt;  &quot;INDICE_15&quot;,&lt;br/&gt;  &quot;VAL_INDICE_15&quot;,&lt;br/&gt;  &quot;INDICE_17&quot;,&lt;br/&gt;  &quot;VAL_INDICE_17&quot;,&lt;br/&gt;  &quot;INDICE_18&quot;,&lt;br/&gt;  &quot;VAL_INDICE_18&quot;,&lt;br/&gt;  &quot;INDICE_19&quot;,&lt;br/&gt;  &quot;VAL_INDICE_19&quot;,&lt;br/&gt;  &quot;INDICE_20&quot;,&lt;br/&gt;  &quot;VAL_INDICE_20&quot;,&lt;br/&gt;  &quot;INDICE_22&quot;,&lt;br/&gt;  &quot;VAL_INDICE_22&quot;,&lt;br/&gt;  &quot;INDICE_23&quot;,&lt;br/&gt;  &quot;VAL_INDICE_23&quot;,&lt;br/&gt;  &quot;INDICE_24&quot;,&lt;br/&gt;  &quot;VAL_INDICE_24&quot;,&lt;br/&gt;  &quot;INDICE_25&quot;,&lt;br/&gt;  &quot;VAL_INDICE_25&quot;,&lt;br/&gt;  &quot;INDICE_27&quot;,&lt;br/&gt;  &quot;VAL_INDICE_27&quot;,&lt;br/&gt;  &quot;INDICE_28&quot;,&lt;br/&gt;  &quot;VAL_INDICE_28&quot;,&lt;br/&gt;  &quot;INDICE_30&quot;,&lt;br/&gt;  &quot;VAL_INDICE_30&quot;,&lt;br/&gt;  &quot;INDICE_31&quot;,&lt;br/&gt;  &quot;VAL_INDICE_31&quot;,&lt;br/&gt;  &quot;INDICE_33&quot;,&lt;br/&gt;  &quot;VAL_INDICE_33&quot;,&lt;br/&gt;  &quot;INDICE_34&quot;,&lt;br/&gt;  &quot;VAL_INDICE_34&quot;,&lt;br/&gt;  &quot;INDICE_36&quot;,&lt;br/&gt;  &quot;VAL_INDICE_36&quot;,&lt;br/&gt;  &quot;INDICE_37&quot;,&lt;br/&gt;  &quot;VAL_INDICE_37&quot;&lt;br/&gt;FROM dados_smp4 ;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE VIEW EASYVIEW.VIEW_SMP5_EXPORTACAO_ANATEL ( SMP, DDX, CONSOLIDACAO, PRIMARIA, PONDERACAO, VAL_PONDERACAO, COLETA, INDICE_14, VAL_INDICE_14, INDICE_15, VAL_INDICE_15, INDICE_17, VAL_INDICE_17, INDICE_18, VAL_INDICE_18, INDICE_19, VAL_INDICE_19, INDICE_20, VAL_INDICE_20, INDICE_22, VAL_INDICE_22, INDICE_23, VAL_INDICE_23, INDICE_24, VAL_INDICE_24, INDICE_25, VAL_INDICE_25, INDICE_27, VAL_INDICE_27, INDICE_28, VAL_INDICE_28, INDICE_30, VAL_INDICE_30, INDICE_31, VAL_INDICE_31, INDICE_33, VAL_INDICE_33, INDICE_34, VAL_INDICE_34, INDICE_36, VAL_INDICE_36, INDICE_37, VAL_INDICE_37 )&lt;br/&gt;                     AS&lt;br/&gt;WITH dados_x_codigos AS&lt;br/&gt;  (SELECT c.DATA,&lt;br/&gt;    c.bilhetador_original,&lt;br/&gt;    c.central AS msc,&lt;br/&gt;    c.CN,&lt;br/&gt;    c.PMM,&lt;br/&gt;    c.REGIONAL,&lt;br/&gt;    c.SMP5_A,&lt;br/&gt;    c.SMP5_B,&lt;br/&gt;    c.SMP5_C,&lt;br/&gt;    c.SMP5_D,&lt;br/&gt;    c.UF,&lt;br/&gt;    c.codigo&lt;br/&gt;  FROM view_msc_vinculo_smp5 c,&lt;br/&gt;    view_msc_cn_ativo_smp5 v&lt;br/&gt;  WHERE v.CN                                       = c.CN&lt;br/&gt;  AND v.msc                                        = c.central&lt;br/&gt;  AND to_date(TO_CHAR(c.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = v.PERIODO&lt;br/&gt;  AND v.status                                     = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  codigos_sem_dados AS&lt;br/&gt;  ( SELECT DISTINCT codigo.msc,&lt;br/&gt;    codigo.cn&lt;br/&gt;  FROM msc_cn_codigo codigo,&lt;br/&gt;    ( SELECT DISTINCT bilhetador.nome&lt;br/&gt;    FROM indicador,&lt;br/&gt;      TIPO_TECNOLOGIA,&lt;br/&gt;      TECNOLOGIA,&lt;br/&gt;      BILHETADOR&lt;br/&gt;    WHERE indicador.nome                  IN (&apos;SMP3&apos;,&apos;SMP4&apos;,&apos;SMP5&apos;,&apos;SMP7&apos;)&lt;br/&gt;    AND TECNOLOGIA.ID_TIPO_TECNOLOGIA      = indicador.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TIPO_TECNOLOGIA.ID_TIPO_TECNOLOGIA = TECNOLOGIA.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TECNOLOGIA.ID                      = BILHETADOR.ID_TECNOLOGIA&lt;br/&gt;    ) bilhetador&lt;br/&gt;  WHERE codigo.msc = bilhetador.nome&lt;br/&gt;  MINUS&lt;br/&gt;  SELECT DISTINCT msc, TO_CHAR(cn) FROM dados_x_codigos&lt;br/&gt;  ),&lt;br/&gt;  distinct_msc_cn_x_pmm AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;    ) datas,&lt;br/&gt;    (SELECT DISTINCT msc, TO_CHAR(cn) cn FROM dados_x_codigos&lt;br/&gt;    ) msc,&lt;br/&gt;    (SELECT DISTINCT pmm FROM dados_x_codigos&lt;br/&gt;    ) pmm&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT data,&lt;br/&gt;      msc,&lt;br/&gt;      TO_CHAR(cn) cn&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT DISTINCT data,&lt;br/&gt;        msc,&lt;br/&gt;        cn&lt;br/&gt;      FROM codigos_sem_dados,&lt;br/&gt;        (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;        )&lt;br/&gt;      )&lt;br/&gt;    ) msc,&lt;br/&gt;    (SELECT DISTINCT pmm FROM dados_x_codigos&lt;br/&gt;    ) pmm&lt;br/&gt;  ),&lt;br/&gt;  dados_trabalhados AS&lt;br/&gt;  (SELECT d.data,&lt;br/&gt;    d.pmm,&lt;br/&gt;    d.cn,&lt;br/&gt;    d.msc,&lt;br/&gt;    NVL(p.SMP5_A,0) SMP5_A,&lt;br/&gt;    NVL(p.SMP5_B,0) SMP5_B,&lt;br/&gt;    NVL(p.SMP5_C,0) SMP5_C,&lt;br/&gt;    NVL(p.SMP5_D,0) SMP5_D,&lt;br/&gt;    NVL(&lt;br/&gt;    (SELECT codigo&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT * FROM msc_cn_codigo b ORDER BY msc, cn, ultima_atualizacao&lt;br/&gt;      ) b&lt;br/&gt;    WHERE d.msc             = b.msc&lt;br/&gt;    AND d.cn                = b.cn&lt;br/&gt;    AND TRUNC(d.data,&apos;MM&apos;) &gt;= TRUNC(b.ultima_atualizacao,&apos;MM&apos;)&lt;br/&gt;    AND rownum              = 1&lt;br/&gt;    ) ,&apos;NID&apos;) AS codigo&lt;br/&gt;  FROM distinct_msc_cn_x_pmm d,&lt;br/&gt;    dados_x_codigos p,&lt;br/&gt;    view_msc_cn_ativo_smp5 cnAtivo&lt;br/&gt;  WHERE d.msc                                               = p.msc (+)&lt;br/&gt;  AND d.cn                                                  = p.cn (+)&lt;br/&gt;  AND d.pmm                                                 = p.pmm (+)&lt;br/&gt;  AND TRUNC(d.data)                                         = TRUNC(p.data (+))&lt;br/&gt;  AND cnAtivo.msc                                           = d.msc&lt;br/&gt;  AND cnAtivo.cn                                            = d.cn&lt;br/&gt;  AND to_date(TO_CHAR(cnAtivo.periodo,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = to_date(TO_CHAR(d.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;)&lt;br/&gt;  AND cnAtivo.status                                        = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  dados_smp5 AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT &apos;SMP5&apos;                                       AS SMP,&lt;br/&gt;      TO_CHAR(ddx.data,&apos;MM/yyyy&apos;)                        AS DDX,&lt;br/&gt;      NULL                                               AS CONSOLIDACAO,&lt;br/&gt;      DECODE(c.codigo,NULL,&apos;NID&apos;, c.codigo)              AS PRIMARIA,&lt;br/&gt;      DECODE(pmm.nome,&apos;PMM1&apos;,&apos;026&apos;,&apos;056&apos;)                AS PONDERACAO,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP5_B,0)+NVL(SMP5_D,0))),&apos;-&apos;) AS val_ponderacao,&lt;br/&gt;      DECODE(pmm.nome,&apos;PMM1&apos;,&apos;01&apos;,&apos;02&apos;)                  AS COLETA,&lt;br/&gt;      &apos;&apos;                                                 AS indice_14,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_14,&lt;br/&gt;      &apos;&apos;                                                 AS indice_15,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_15,&lt;br/&gt;      &apos;&apos;                                                 AS indice_17,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_17,&lt;br/&gt;      &apos;&apos;                                                 AS indice_18,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_18,&lt;br/&gt;      &apos;&apos;                                                 AS indice_19,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_19,&lt;br/&gt;      &apos;&apos;                                                 AS indice_20,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_20,&lt;br/&gt;      &apos;22&apos;                                               AS indice_22,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP5_A,0))),&apos;-&apos;)               AS val_indice_22,&lt;br/&gt;      &apos;23&apos;                                               AS indice_23,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP5_B,0))),&apos;-&apos;)               AS val_indice_23,&lt;br/&gt;      &apos;24&apos;                                               AS indice_24,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP5_C,0))),&apos;-&apos;)               AS val_indice_24,&lt;br/&gt;      &apos;25&apos;                                               AS indice_25,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP5_D,0))),&apos;-&apos;)               AS val_indice_25,&lt;br/&gt;      &apos;&apos;                                                 AS indice_27,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_27,&lt;br/&gt;      &apos;&apos;                                                 AS indice_28,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_28,&lt;br/&gt;      &apos;&apos;                                                 AS indice_30,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_30,&lt;br/&gt;      &apos;&apos;                                                 AS indice_31,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_31,&lt;br/&gt;      &apos;&apos;                                                 AS indice_33,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_33,&lt;br/&gt;      &apos;&apos;                                                 AS indice_34,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_34,&lt;br/&gt;      &apos;&apos;                                                 AS indice_36,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_36,&lt;br/&gt;      &apos;&apos;                                                 AS indice_37,&lt;br/&gt;      &apos;&apos;                                                 AS val_indice_37&lt;br/&gt;    FROM dados_trabalhados c,&lt;br/&gt;      ddx ddx,&lt;br/&gt;      pmm pmm&lt;br/&gt;    WHERE TO_CHAR(c.data,&apos;dd/MM/yyyy&apos;) = TO_CHAR(ddx.data,&apos;dd/MM/yyyy&apos;)&lt;br/&gt;    AND c.pmm                          = pmm.nome&lt;br/&gt;    GROUP BY &apos;SMP5&apos;,&lt;br/&gt;      TO_CHAR(ddx.data,&apos;MM/yyyy&apos;),&lt;br/&gt;      NULL,&lt;br/&gt;      c.codigo,&lt;br/&gt;      pmm.nome,&lt;br/&gt;      &apos;22&apos;,&lt;br/&gt;      &apos;23&apos;,&lt;br/&gt;      &apos;24&apos;,&lt;br/&gt;      &apos;25&apos;&lt;br/&gt;    ORDER BY primaria&lt;br/&gt;    )&lt;br/&gt;  WHERE primaria != &apos;NID&apos;&lt;br/&gt;  )&lt;br/&gt;SELECT &quot;SMP&quot;,&lt;br/&gt;  &quot;DDX&quot;,&lt;br/&gt;  &quot;CONSOLIDACAO&quot;,&lt;br/&gt;  &quot;PRIMARIA&quot;,&lt;br/&gt;  &quot;PONDERACAO&quot;,&lt;br/&gt;  &quot;VAL_PONDERACAO&quot;,&lt;br/&gt;  &quot;COLETA&quot;,&lt;br/&gt;  &quot;INDICE_14&quot;,&lt;br/&gt;  &quot;VAL_INDICE_14&quot;,&lt;br/&gt;  &quot;INDICE_15&quot;,&lt;br/&gt;  &quot;VAL_INDICE_15&quot;,&lt;br/&gt;  &quot;INDICE_17&quot;,&lt;br/&gt;  &quot;VAL_INDICE_17&quot;,&lt;br/&gt;  &quot;INDICE_18&quot;,&lt;br/&gt;  &quot;VAL_INDICE_18&quot;,&lt;br/&gt;  &quot;INDICE_19&quot;,&lt;br/&gt;  &quot;VAL_INDICE_19&quot;,&lt;br/&gt;  &quot;INDICE_20&quot;,&lt;br/&gt;  &quot;VAL_INDICE_20&quot;,&lt;br/&gt;  &quot;INDICE_22&quot;,&lt;br/&gt;  &quot;VAL_INDICE_22&quot;,&lt;br/&gt;  &quot;INDICE_23&quot;,&lt;br/&gt;  &quot;VAL_INDICE_23&quot;,&lt;br/&gt;  &quot;INDICE_24&quot;,&lt;br/&gt;  &quot;VAL_INDICE_24&quot;,&lt;br/&gt;  &quot;INDICE_25&quot;,&lt;br/&gt;  &quot;VAL_INDICE_25&quot;,&lt;br/&gt;  &quot;INDICE_27&quot;,&lt;br/&gt;  &quot;VAL_INDICE_27&quot;,&lt;br/&gt;  &quot;INDICE_28&quot;,&lt;br/&gt;  &quot;VAL_INDICE_28&quot;,&lt;br/&gt;  &quot;INDICE_30&quot;,&lt;br/&gt;  &quot;VAL_INDICE_30&quot;,&lt;br/&gt;  &quot;INDICE_31&quot;,&lt;br/&gt;  &quot;VAL_INDICE_31&quot;,&lt;br/&gt;  &quot;INDICE_33&quot;,&lt;br/&gt;  &quot;VAL_INDICE_33&quot;,&lt;br/&gt;  &quot;INDICE_34&quot;,&lt;br/&gt;  &quot;VAL_INDICE_34&quot;,&lt;br/&gt;  &quot;INDICE_36&quot;,&lt;br/&gt;  &quot;VAL_INDICE_36&quot;,&lt;br/&gt;  &quot;INDICE_37&quot;,&lt;br/&gt;  &quot;VAL_INDICE_37&quot;&lt;br/&gt;FROM dados_smp5 ;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE VIEW EASYVIEW.VIEW_SMP6_EXPORTACAO_ANATEL ( SMP, DDX, CONSOLIDACAO, PRIMARIA, PONDERACAO, VAL_PONDERACAO, COLETA, INDICE_14, VAL_INDICE_14, INDICE_15, VAL_INDICE_15, INDICE_17, VAL_INDICE_17, INDICE_18, VAL_INDICE_18, INDICE_19, VAL_INDICE_19, INDICE_20, VAL_INDICE_20, INDICE_22, VAL_INDICE_22, INDICE_23, VAL_INDICE_23, INDICE_24, VAL_INDICE_24, INDICE_25, VAL_INDICE_25, INDICE_27, VAL_INDICE_27, INDICE_28, VAL_INDICE_28, INDICE_30, VAL_INDICE_30, INDICE_31, VAL_INDICE_31, INDICE_33, VAL_INDICE_33, INDICE_34, VAL_INDICE_34, INDICE_36, VAL_INDICE_36, INDICE_37, VAL_INDICE_37 )&lt;br/&gt;                     AS&lt;br/&gt;WITH dados_x_codigos AS&lt;br/&gt;  (SELECT c.DATA,&lt;br/&gt;    c.pmm,&lt;br/&gt;    c.CN,&lt;br/&gt;    c.bilhetador_original,&lt;br/&gt;    c.MSC,&lt;br/&gt;    c.CHAM_ENT60,&lt;br/&gt;    c.EXPURGO_TOTAL,&lt;br/&gt;    c.CHAM_TOT,&lt;br/&gt;    c.OK,&lt;br/&gt;    c.NOK,&lt;br/&gt;    c.codigo&lt;br/&gt;  FROM view_msc_vinculo_smp6 c,&lt;br/&gt;    view_msc_cn_ativo_smp6 v&lt;br/&gt;  WHERE v.CN                                       = c.CN&lt;br/&gt;  AND v.MSC                                        = c.MSC&lt;br/&gt;  AND to_date(TO_CHAR(c.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = v.PERIODO&lt;br/&gt;  AND v.status                                     = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  codigos_sem_dados AS&lt;br/&gt;  (SELECT msc,&lt;br/&gt;    cn&lt;br/&gt;  FROM&lt;br/&gt;    ( SELECT DISTINCT primaria.msc,&lt;br/&gt;      primaria.cn&lt;br/&gt;    FROM&lt;br/&gt;      ( SELECT DISTINCT codigo.plataforma AS msc,&lt;br/&gt;        codigo.cn&lt;br/&gt;      FROM unidade_primaria_smp6 codigo,&lt;br/&gt;        ( SELECT DISTINCT bilhetador.nome&lt;br/&gt;        FROM indicador,&lt;br/&gt;          TIPO_TECNOLOGIA,&lt;br/&gt;          TECNOLOGIA,&lt;br/&gt;          BILHETADOR&lt;br/&gt;        WHERE indicador.nome                  IN (&apos;SMP6&apos;)&lt;br/&gt;        AND TECNOLOGIA.ID_TIPO_TECNOLOGIA      = indicador.ID_TIPO_TECNOLOGIA&lt;br/&gt;        AND TIPO_TECNOLOGIA.ID_TIPO_TECNOLOGIA = TECNOLOGIA.ID_TIPO_TECNOLOGIA&lt;br/&gt;        AND TECNOLOGIA.ID                      = BILHETADOR.ID_TECNOLOGIA&lt;br/&gt;        ) bilhetador&lt;br/&gt;      WHERE codigo.plataforma = bilhetador.nome&lt;br/&gt;      ) primaria,&lt;br/&gt;      (SELECT DISTINCT codigo.plataforma AS msc,&lt;br/&gt;        codigo.cn&lt;br/&gt;      FROM unidade_secundaria codigo,&lt;br/&gt;        ( SELECT DISTINCT bilhetador.nome&lt;br/&gt;        FROM indicador,&lt;br/&gt;          TIPO_TECNOLOGIA,&lt;br/&gt;          TECNOLOGIA,&lt;br/&gt;          BILHETADOR&lt;br/&gt;        WHERE indicador.nome                  IN (&apos;SMP6&apos;)&lt;br/&gt;        AND TECNOLOGIA.ID_TIPO_TECNOLOGIA      = indicador.ID_TIPO_TECNOLOGIA&lt;br/&gt;        AND TIPO_TECNOLOGIA.ID_TIPO_TECNOLOGIA = TECNOLOGIA.ID_TIPO_TECNOLOGIA&lt;br/&gt;        AND TECNOLOGIA.ID                      = BILHETADOR.ID_TECNOLOGIA&lt;br/&gt;        ) bilhetador&lt;br/&gt;      WHERE codigo.plataforma = bilhetador.nome&lt;br/&gt;      ) secundaria&lt;br/&gt;    WHERE primaria.msc = secundaria.msc&lt;br/&gt;    AND primaria.cn    = secundaria.cn&lt;br/&gt;    )&lt;br/&gt;  MINUS&lt;br/&gt;  SELECT DISTINCT msc, TO_CHAR(cn) FROM dados_x_codigos&lt;br/&gt;  ),&lt;br/&gt;  dados_smp6 AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT &apos;SMP6&apos;                                                    AS SMP,&lt;br/&gt;      TO_CHAR(ddx.data,&apos;MM/yyyy&apos;)                                     AS DDX,&lt;br/&gt;      us.codigo                                                       AS CONSOLIDACAO,&lt;br/&gt;      DECODE(m.codigo,NULL,&apos;NID&apos;, m.codigo)                           AS PRIMARIA,&lt;br/&gt;      &apos;029&apos;                                                           AS PONDERACAO,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(OK,0)+NVL(NOK,0))),&apos;-&apos;)                     AS val_ponderacao,&lt;br/&gt;      &apos;04&apos;                                                            AS COLETA,&lt;br/&gt;      &apos;&apos;                                                              AS indice_14,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_14,&lt;br/&gt;      &apos;&apos;                                                              AS indice_15,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_15,&lt;br/&gt;      &apos;&apos;                                                              AS indice_17,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_17,&lt;br/&gt;      &apos;&apos;                                                              AS indice_18,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_18,&lt;br/&gt;      &apos;&apos;                                                              AS indice_19,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_19,&lt;br/&gt;      &apos;&apos;                                                              AS indice_20,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_20,&lt;br/&gt;      &apos;&apos;                                                              AS indice_22,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_22,&lt;br/&gt;      &apos;&apos;                                                              AS indice_23,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_23,&lt;br/&gt;      &apos;&apos;                                                              AS indice_24,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_24,&lt;br/&gt;      &apos;&apos;                                                              AS indice_25,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_25,&lt;br/&gt;      &apos;27&apos;                                                            AS indice_27,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(CHAM_ENT60,0) + NVL(EXPURGO_TOTAL,0))),&apos;-&apos;) AS val_indice_27,&lt;br/&gt;      &apos;28&apos;                                                            AS indice_28,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(OK,0)+NVL(NOK,0))),&apos;-&apos;)                     AS val_indice_28,&lt;br/&gt;      &apos;&apos;                                                              AS indice_30,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_30,&lt;br/&gt;      &apos;&apos;                                                              AS indice_31,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_31,&lt;br/&gt;      &apos;&apos;                                                              AS indice_33,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_33,&lt;br/&gt;      &apos;&apos;                                                              AS indice_34,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_34,&lt;br/&gt;      &apos;&apos;                                                              AS indice_36,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_36,&lt;br/&gt;      &apos;&apos;                                                              AS indice_37,&lt;br/&gt;      &apos;&apos;                                                              AS val_indice_37&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT c.*&lt;br/&gt;      FROM view_msc_vinculo_smp6 c,&lt;br/&gt;        view_msc_cn_ativo_smp6 v&lt;br/&gt;      WHERE v.CN                                       = c.CN&lt;br/&gt;      AND v.MSC                                        = c.MSC&lt;br/&gt;      AND to_date(TO_CHAR(c.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = v.PERIODO&lt;br/&gt;      AND v.status                                     = &apos;T&apos;&lt;br/&gt;      ) c,&lt;br/&gt;      ddx ddx,&lt;br/&gt;      unidade_primaria_smp6 m,&lt;br/&gt;      unidade_secundaria us&lt;br/&gt;    WHERE TO_CHAR(c.data,&apos;dd/MM/yyyy&apos;) = TO_CHAR(ddx.data,&apos;dd/MM/yyyy&apos;)&lt;br/&gt;    AND c.cn                           = us.cn&lt;br/&gt;    AND c.msc                          = us.plataforma&lt;br/&gt;    AND m.cn                           = us.cn&lt;br/&gt;    AND m.plataforma                   = us.plataforma&lt;br/&gt;    AND TRUNC(c.data, &apos;MM&apos;)           &gt;= TRUNC(m.ultima_atualizacao,&apos;MM&apos;)&lt;br/&gt;    AND TRUNC(c.data, &apos;MM&apos;)           &gt;= TRUNC(us.ultima_atualizacao,&apos;MM&apos;)&lt;br/&gt;    GROUP BY &apos;SMP6&apos;,&lt;br/&gt;      TO_CHAR(ddx.data,&apos;MM/yyyy&apos;),&lt;br/&gt;      us.codigo,&lt;br/&gt;      m.codigo,&lt;br/&gt;      &apos;NID&apos;,&lt;br/&gt;      &apos;029&apos;,&lt;br/&gt;      &apos;04&apos;&lt;br/&gt;    ORDER BY consolidacao,&lt;br/&gt;      primaria&lt;br/&gt;    )&lt;br/&gt;  WHERE primaria  != &apos;NID&apos;&lt;br/&gt;  OR consolidacao != &apos;NID&apos;&lt;br/&gt;  ),&lt;br/&gt;  dados_smp6_x_sem_codigos AS&lt;br/&gt;  ( SELECT DISTINCT d.DDX,&lt;br/&gt;    d.ponderacao,&lt;br/&gt;    NVL(&lt;br/&gt;    (SELECT codigo&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT *&lt;br/&gt;      FROM unidade_secundaria b&lt;br/&gt;      ORDER BY plataforma,&lt;br/&gt;        cn,&lt;br/&gt;        ultima_atualizacao&lt;br/&gt;      ) b&lt;br/&gt;    WHERE c.msc = b.plataforma&lt;br/&gt;    AND c.cn    = b.cn&lt;br/&gt;    AND rownum  = 1&lt;br/&gt;    ) ,&apos;NID&apos;) consolidacao,&lt;br/&gt;    NVL(&lt;br/&gt;    (SELECT codigo&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT *&lt;br/&gt;      FROM unidade_primaria_smp6 b&lt;br/&gt;      ORDER BY plataforma,&lt;br/&gt;        cn,&lt;br/&gt;        ultima_atualizacao&lt;br/&gt;      ) b&lt;br/&gt;    WHERE c.msc = b.plataforma&lt;br/&gt;    AND c.cn    = b.cn&lt;br/&gt;    AND rownum  = 1&lt;br/&gt;    ) ,&apos;NID&apos;) codigo&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT ddx, ponderacao FROM dados_smp6&lt;br/&gt;    ) d,&lt;br/&gt;    codigos_sem_dados c&lt;br/&gt;  ),&lt;br/&gt;  dados_smp6_e_codigos AS&lt;br/&gt;  (SELECT &apos;SMP6&apos;        AS SMP,&lt;br/&gt;    ddx                 AS DDX,&lt;br/&gt;    consolidacao        AS CONSOLIDACAO,&lt;br/&gt;    codigo              AS PRIMARIA,&lt;br/&gt;    ponderacao          AS PONDERACAO,&lt;br/&gt;    NVL(TO_CHAR(0),&apos;-&apos;) AS val_ponderacao,&lt;br/&gt;    &apos;04&apos;                AS COLETA,&lt;br/&gt;    &apos;&apos;                  AS indice_14,&lt;br/&gt;    &apos;&apos;                  AS val_indice_14,&lt;br/&gt;    &apos;&apos;                  AS indice_15,&lt;br/&gt;    &apos;&apos;                  AS val_indice_15,&lt;br/&gt;    &apos;&apos;                  AS indice_17,&lt;br/&gt;    &apos;&apos;                  AS val_indice_17,&lt;br/&gt;    &apos;&apos;                  AS indice_18,&lt;br/&gt;    &apos;&apos;                  AS val_indice_18,&lt;br/&gt;    &apos;&apos;                  AS indice_19,&lt;br/&gt;    &apos;&apos;                  AS val_indice_19,&lt;br/&gt;    &apos;&apos;                  AS indice_20,&lt;br/&gt;    &apos;&apos;                  AS val_indice_20,&lt;br/&gt;    &apos;&apos;                  AS indice_22,&lt;br/&gt;    &apos;&apos;                  AS val_indice_22,&lt;br/&gt;    &apos;&apos;                  AS indice_23,&lt;br/&gt;    &apos;&apos;                  AS val_indice_23,&lt;br/&gt;    &apos;&apos;                  AS indice_24,&lt;br/&gt;    &apos;&apos;                  AS val_indice_24,&lt;br/&gt;    &apos;&apos;                  AS indice_25,&lt;br/&gt;    &apos;&apos;                  AS val_indice_25,&lt;br/&gt;    &apos;27&apos;                AS indice_27,&lt;br/&gt;    NVL(TO_CHAR(0),&apos;-&apos;) AS val_indice_27,&lt;br/&gt;    &apos;28&apos;                AS indice_28,&lt;br/&gt;    NVL(TO_CHAR(0),&apos;-&apos;) AS val_indice_28,&lt;br/&gt;    &apos;&apos;                  AS indice_30,&lt;br/&gt;    &apos;&apos;                  AS val_indice_30,&lt;br/&gt;    &apos;&apos;                  AS indice_31,&lt;br/&gt;    &apos;&apos;                  AS val_indice_31,&lt;br/&gt;    &apos;&apos;                  AS indice_33,&lt;br/&gt;    &apos;&apos;                  AS val_indice_33,&lt;br/&gt;    &apos;&apos;                  AS indice_34,&lt;br/&gt;    &apos;&apos;                  AS val_indice_34,&lt;br/&gt;    &apos;&apos;                  AS indice_36,&lt;br/&gt;    &apos;&apos;                  AS val_indice_36,&lt;br/&gt;    &apos;&apos;                  AS indice_37,&lt;br/&gt;    &apos;&apos;                  AS val_indice_37&lt;br/&gt;  FROM dados_smp6_x_sem_codigos&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT * FROM dados_smp6 ORDER BY primaria&lt;br/&gt;  )&lt;br/&gt;SELECT &quot;SMP&quot;,&lt;br/&gt;  &quot;DDX&quot;,&lt;br/&gt;  &quot;CONSOLIDACAO&quot;,&lt;br/&gt;  &quot;PRIMARIA&quot;,&lt;br/&gt;  &quot;PONDERACAO&quot;,&lt;br/&gt;  &quot;VAL_PONDERACAO&quot;,&lt;br/&gt;  &quot;COLETA&quot;,&lt;br/&gt;  &quot;INDICE_14&quot;,&lt;br/&gt;  &quot;VAL_INDICE_14&quot;,&lt;br/&gt;  &quot;INDICE_15&quot;,&lt;br/&gt;  &quot;VAL_INDICE_15&quot;,&lt;br/&gt;  &quot;INDICE_17&quot;,&lt;br/&gt;  &quot;VAL_INDICE_17&quot;,&lt;br/&gt;  &quot;INDICE_18&quot;,&lt;br/&gt;  &quot;VAL_INDICE_18&quot;,&lt;br/&gt;  &quot;INDICE_19&quot;,&lt;br/&gt;  &quot;VAL_INDICE_19&quot;,&lt;br/&gt;  &quot;INDICE_20&quot;,&lt;br/&gt;  &quot;VAL_INDICE_20&quot;,&lt;br/&gt;  &quot;INDICE_22&quot;,&lt;br/&gt;  &quot;VAL_INDICE_22&quot;,&lt;br/&gt;  &quot;INDICE_23&quot;,&lt;br/&gt;  &quot;VAL_INDICE_23&quot;,&lt;br/&gt;  &quot;INDICE_24&quot;,&lt;br/&gt;  &quot;VAL_INDICE_24&quot;,&lt;br/&gt;  &quot;INDICE_25&quot;,&lt;br/&gt;  &quot;VAL_INDICE_25&quot;,&lt;br/&gt;  &quot;INDICE_27&quot;,&lt;br/&gt;  &quot;VAL_INDICE_27&quot;,&lt;br/&gt;  &quot;INDICE_28&quot;,&lt;br/&gt;  &quot;VAL_INDICE_28&quot;,&lt;br/&gt;  &quot;INDICE_30&quot;,&lt;br/&gt;  &quot;VAL_INDICE_30&quot;,&lt;br/&gt;  &quot;INDICE_31&quot;,&lt;br/&gt;  &quot;VAL_INDICE_31&quot;,&lt;br/&gt;  &quot;INDICE_33&quot;,&lt;br/&gt;  &quot;VAL_INDICE_33&quot;,&lt;br/&gt;  &quot;INDICE_34&quot;,&lt;br/&gt;  &quot;VAL_INDICE_34&quot;,&lt;br/&gt;  &quot;INDICE_36&quot;,&lt;br/&gt;  &quot;VAL_INDICE_36&quot;,&lt;br/&gt;  &quot;INDICE_37&quot;,&lt;br/&gt;  &quot;VAL_INDICE_37&quot;&lt;br/&gt;FROM dados_smp6_e_codigos ;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE VIEW EASYVIEW.VIEW_SMP7_EXPORTACAO_ANATEL ( SMP, DDX, CONSOLIDACAO, PRIMARIA, PONDERACAO, VAL_PONDERACAO, COLETA, INDICE_14, VAL_INDICE_14, INDICE_15, VAL_INDICE_15, INDICE_17, VAL_INDICE_17, INDICE_18, VAL_INDICE_18, INDICE_19, VAL_INDICE_19, INDICE_20, VAL_INDICE_20, INDICE_22, VAL_INDICE_22, INDICE_23, VAL_INDICE_23, INDICE_24, VAL_INDICE_24, INDICE_25, VAL_INDICE_25, INDICE_27, VAL_INDICE_27, INDICE_28, VAL_INDICE_28, INDICE_30, VAL_INDICE_30, INDICE_31, VAL_INDICE_31, INDICE_33, VAL_INDICE_33, INDICE_34, VAL_INDICE_34, INDICE_36, VAL_INDICE_36, INDICE_37, VAL_INDICE_37 )&lt;br/&gt;                     AS&lt;br/&gt;WITH dados_x_codigos AS&lt;br/&gt;  (SELECT c.DATA,&lt;br/&gt;    c.HORA,&lt;br/&gt;    c.PMM,&lt;br/&gt;    c.CN,&lt;br/&gt;    c.bilhetador_original,&lt;br/&gt;    c.MSC,&lt;br/&gt;    c.OK1_DRP,&lt;br/&gt;    c.OK1_DRP_TCT,&lt;br/&gt;    c.OKT,&lt;br/&gt;    c.OK_ITCP,&lt;br/&gt;    c.codigo&lt;br/&gt;  FROM view_msc_vinculo_smp7 c,&lt;br/&gt;    view_msc_cn_ativo_smp7 v&lt;br/&gt;  WHERE v.CN                                       = c.CN&lt;br/&gt;  AND v.msc                                        = c.msc&lt;br/&gt;  AND to_date(TO_CHAR(c.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = v.PERIODO&lt;br/&gt;  AND v.status                                     = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  codigos_sem_dados AS&lt;br/&gt;  ( SELECT DISTINCT codigo.msc,&lt;br/&gt;    codigo.cn&lt;br/&gt;  FROM msc_cn_codigo codigo,&lt;br/&gt;    ( SELECT DISTINCT bilhetador.nome&lt;br/&gt;    FROM indicador,&lt;br/&gt;      TIPO_TECNOLOGIA,&lt;br/&gt;      TECNOLOGIA,&lt;br/&gt;      BILHETADOR&lt;br/&gt;    WHERE indicador.nome                  IN (&apos;SMP3&apos;,&apos;SMP4&apos;,&apos;SMP5&apos;,&apos;SMP7&apos;)&lt;br/&gt;    AND TECNOLOGIA.ID_TIPO_TECNOLOGIA      = indicador.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TIPO_TECNOLOGIA.ID_TIPO_TECNOLOGIA = TECNOLOGIA.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TECNOLOGIA.ID                      = BILHETADOR.ID_TECNOLOGIA&lt;br/&gt;    ) bilhetador&lt;br/&gt;  WHERE codigo.msc = bilhetador.nome&lt;br/&gt;  MINUS&lt;br/&gt;  SELECT DISTINCT msc, TO_CHAR(cn) FROM dados_x_codigos&lt;br/&gt;  ),&lt;br/&gt;  distinct_msc_cn_x_pmm AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;    ) datas,&lt;br/&gt;    (SELECT DISTINCT msc, TO_CHAR(cn) cn FROM dados_x_codigos&lt;br/&gt;    ) msc,&lt;br/&gt;    (SELECT DISTINCT pmm FROM dados_x_codigos&lt;br/&gt;    ) pmm&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT data,&lt;br/&gt;      msc,&lt;br/&gt;      TO_CHAR(cn) cn&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT DISTINCT data,&lt;br/&gt;        msc,&lt;br/&gt;        cn&lt;br/&gt;      FROM codigos_sem_dados,&lt;br/&gt;        (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;        )&lt;br/&gt;      )&lt;br/&gt;    ) msc,&lt;br/&gt;    (SELECT DISTINCT pmm FROM dados_x_codigos&lt;br/&gt;    ) pmm&lt;br/&gt;  ),&lt;br/&gt;  dados_trabalhados AS&lt;br/&gt;  (SELECT d.data,&lt;br/&gt;    d.pmm,&lt;br/&gt;    d.cn,&lt;br/&gt;    d.msc,&lt;br/&gt;    NVL(p.OK1_DRP,0) ok1_drp,&lt;br/&gt;    NVL(p.OK1_DRP_TCT,0) ok1_drp_tct,&lt;br/&gt;    NVL(p.OKT,0) okt,&lt;br/&gt;    NVL(p.OK_ITCP,0) ok_itcp,&lt;br/&gt;    NVL(&lt;br/&gt;    (SELECT codigo&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT * FROM msc_cn_codigo b ORDER BY msc, cn, ultima_atualizacao&lt;br/&gt;      ) b&lt;br/&gt;    WHERE d.msc             = b.msc&lt;br/&gt;    AND d.cn                = b.cn&lt;br/&gt;    AND TRUNC(d.data,&apos;MM&apos;) &gt;= TRUNC(b.ultima_atualizacao,&apos;MM&apos;)&lt;br/&gt;    AND rownum              = 1&lt;br/&gt;    ) ,&apos;NID&apos;) AS codigo&lt;br/&gt;  FROM distinct_msc_cn_x_pmm d,&lt;br/&gt;    dados_x_codigos p,&lt;br/&gt;    view_msc_cn_ativo_smp7 cnAtivo&lt;br/&gt;  WHERE d.msc                                               = p.msc (+)&lt;br/&gt;  AND d.cn                                                  = p.cn (+)&lt;br/&gt;  AND d.pmm                                                 = p.pmm (+)&lt;br/&gt;  AND TRUNC(d.data)                                         = TRUNC(p.data (+))&lt;br/&gt;  AND cnAtivo.msc                                           = d.msc&lt;br/&gt;  AND cnAtivo.cn                                            = d.cn&lt;br/&gt;  AND to_date(TO_CHAR(cnAtivo.periodo,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = to_date(TO_CHAR(d.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;)&lt;br/&gt;  AND cnAtivo.status                                        = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  dados_smp7 AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT &apos;SMP7&apos;                                               AS SMP,&lt;br/&gt;      TO_CHAR(ddx.data,&apos;MM/yyyy&apos;)                                AS DDX,&lt;br/&gt;      NULL                                                       AS CONSOLIDACAO,&lt;br/&gt;      DECODE(c.codigo,NULL,&apos;NID&apos;, c.codigo)                      AS PRIMARIA,&lt;br/&gt;      DECODE(pmm.nome,&apos;PMM1&apos;,&apos;032&apos;,&apos;057&apos;)                        AS PONDERACAO,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(OKT,0)-NVL(OK_ITCP,0))),&apos;-&apos;)           AS val_ponderacao,&lt;br/&gt;      DECODE(pmm.nome,&apos;PMM1&apos;,&apos;01&apos;,&apos;02&apos;)                          AS COLETA,&lt;br/&gt;      &apos;&apos;                                                         AS indice_14,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_14,&lt;br/&gt;      &apos;&apos;                                                         AS indice_15,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_15,&lt;br/&gt;      &apos;&apos;                                                         AS indice_17,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_17,&lt;br/&gt;      &apos;&apos;                                                         AS indice_18,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_18,&lt;br/&gt;      &apos;&apos;                                                         AS indice_19,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_19,&lt;br/&gt;      &apos;&apos;                                                         AS indice_20,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_20,&lt;br/&gt;      &apos;&apos;                                                         AS indice_22,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_22,&lt;br/&gt;      &apos;&apos;                                                         AS indice_23,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_23,&lt;br/&gt;      &apos;&apos;                                                         AS indice_24,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_24,&lt;br/&gt;      &apos;&apos;                                                         AS indice_25,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_25,&lt;br/&gt;      &apos;&apos;                                                         AS indice_27,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_27,&lt;br/&gt;      &apos;&apos;                                                         AS indice_28,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_28,&lt;br/&gt;      &apos;30&apos;                                                       AS indice_30,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(OK1_DRP,0) + NVL(OK1_DRP_TCT,0))),&apos;-&apos;) AS val_indice_30,&lt;br/&gt;      &apos;31&apos;                                                       AS indice_31,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(OKT,0)-NVL(OK_ITCP,0))),&apos;-&apos;)           AS val_indice_31,&lt;br/&gt;      &apos;&apos;                                                         AS indice_33,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_33,&lt;br/&gt;      &apos;&apos;                                                         AS indice_34,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_34,&lt;br/&gt;      &apos;&apos;                                                         AS indice_36,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_36,&lt;br/&gt;      &apos;&apos;                                                         AS indice_37,&lt;br/&gt;      &apos;&apos;                                                         AS val_indice_37&lt;br/&gt;    FROM dados_trabalhados c,&lt;br/&gt;      ddx ddx,&lt;br/&gt;      pmm pmm&lt;br/&gt;    WHERE TO_CHAR(c.data,&apos;dd/MM/yyyy&apos;) = TO_CHAR(ddx.data,&apos;dd/MM/yyyy&apos;)&lt;br/&gt;    AND pmm.nome                       = c.pmm&lt;br/&gt;    GROUP BY &apos;SMP7&apos;,&lt;br/&gt;      TO_CHAR(ddx.data,&apos;MM/yyyy&apos;),&lt;br/&gt;      NULL,&lt;br/&gt;      c.codigo,&lt;br/&gt;      pmm.nome&lt;br/&gt;    ORDER BY primaria&lt;br/&gt;    )&lt;br/&gt;  WHERE primaria != &apos;NID&apos;&lt;br/&gt;  )&lt;br/&gt;SELECT &quot;SMP&quot;,&lt;br/&gt;  &quot;DDX&quot;,&lt;br/&gt;  &quot;CONSOLIDACAO&quot;,&lt;br/&gt;  &quot;PRIMARIA&quot;,&lt;br/&gt;  &quot;PONDERACAO&quot;,&lt;br/&gt;  &quot;VAL_PONDERACAO&quot;,&lt;br/&gt;  &quot;COLETA&quot;,&lt;br/&gt;  &quot;INDICE_14&quot;,&lt;br/&gt;  &quot;VAL_INDICE_14&quot;,&lt;br/&gt;  &quot;INDICE_15&quot;,&lt;br/&gt;  &quot;VAL_INDICE_15&quot;,&lt;br/&gt;  &quot;INDICE_17&quot;,&lt;br/&gt;  &quot;VAL_INDICE_17&quot;,&lt;br/&gt;  &quot;INDICE_18&quot;,&lt;br/&gt;  &quot;VAL_INDICE_18&quot;,&lt;br/&gt;  &quot;INDICE_19&quot;,&lt;br/&gt;  &quot;VAL_INDICE_19&quot;,&lt;br/&gt;  &quot;INDICE_20&quot;,&lt;br/&gt;  &quot;VAL_INDICE_20&quot;,&lt;br/&gt;  &quot;INDICE_22&quot;,&lt;br/&gt;  &quot;VAL_INDICE_22&quot;,&lt;br/&gt;  &quot;INDICE_23&quot;,&lt;br/&gt;  &quot;VAL_INDICE_23&quot;,&lt;br/&gt;  &quot;INDICE_24&quot;,&lt;br/&gt;  &quot;VAL_INDICE_24&quot;,&lt;br/&gt;  &quot;INDICE_25&quot;,&lt;br/&gt;  &quot;VAL_INDICE_25&quot;,&lt;br/&gt;  &quot;INDICE_27&quot;,&lt;br/&gt;  &quot;VAL_INDICE_27&quot;,&lt;br/&gt;  &quot;INDICE_28&quot;,&lt;br/&gt;  &quot;VAL_INDICE_28&quot;,&lt;br/&gt;  &quot;INDICE_30&quot;,&lt;br/&gt;  &quot;VAL_INDICE_30&quot;,&lt;br/&gt;  &quot;INDICE_31&quot;,&lt;br/&gt;  &quot;VAL_INDICE_31&quot;,&lt;br/&gt;  &quot;INDICE_33&quot;,&lt;br/&gt;  &quot;VAL_INDICE_33&quot;,&lt;br/&gt;  &quot;INDICE_34&quot;,&lt;br/&gt;  &quot;VAL_INDICE_34&quot;,&lt;br/&gt;  &quot;INDICE_36&quot;,&lt;br/&gt;  &quot;VAL_INDICE_36&quot;,&lt;br/&gt;  &quot;INDICE_37&quot;,&lt;br/&gt;  &quot;VAL_INDICE_37&quot;&lt;br/&gt;FROM dados_smp7 ;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE VIEW EASYVIEW.VIEW_SMP8_EXPORTACAO_ANATEL ( SMP, DDX, CONSOLIDACAO, PRIMARIA, PONDERACAO, VAL_PONDERACAO, COLETA, INDICE_14, VAL_INDICE_14, INDICE_15, VAL_INDICE_15, INDICE_17, VAL_INDICE_17, INDICE_18, VAL_INDICE_18, INDICE_19, VAL_INDICE_19, INDICE_20, VAL_INDICE_20, INDICE_22, VAL_INDICE_22, INDICE_23, VAL_INDICE_23, INDICE_24, VAL_INDICE_24, INDICE_25, VAL_INDICE_25, INDICE_27, VAL_INDICE_27, INDICE_28, VAL_INDICE_28, INDICE_30, VAL_INDICE_30, INDICE_31, VAL_INDICE_31, INDICE_33, VAL_INDICE_33, INDICE_34, VAL_INDICE_34, INDICE_36, VAL_INDICE_36, INDICE_37, VAL_INDICE_37 )&lt;br/&gt;                     AS&lt;br/&gt;WITH dados_x_codigos AS&lt;br/&gt;  (SELECT c.DATA,&lt;br/&gt;    c.bilhetador_original,&lt;br/&gt;    c.CENTRAL AS msc,&lt;br/&gt;    c.CN,&lt;br/&gt;    c.PMM,&lt;br/&gt;    c.REGIONAL,&lt;br/&gt;    c.UF,&lt;br/&gt;    c.SMP8_A,&lt;br/&gt;    c.SMP8_B,&lt;br/&gt;    c.codigo&lt;br/&gt;  FROM view_msc_vinculo_smp8 c,&lt;br/&gt;    view_msc_cn_ativo_smp8 v&lt;br/&gt;  WHERE v.CN                                       = c.CN&lt;br/&gt;  AND v.msc                                        = c.central&lt;br/&gt;  AND to_date(TO_CHAR(c.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = v.PERIODO&lt;br/&gt;  AND v.status                                     = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  codigos_sem_dados AS&lt;br/&gt;  ( SELECT DISTINCT codigo.msc,&lt;br/&gt;    codigo.cn&lt;br/&gt;  FROM msc_cn_codigo codigo,&lt;br/&gt;    ( SELECT DISTINCT bilhetador.nome&lt;br/&gt;    FROM indicador,&lt;br/&gt;      TIPO_TECNOLOGIA,&lt;br/&gt;      TECNOLOGIA,&lt;br/&gt;      BILHETADOR&lt;br/&gt;    WHERE indicador.nome                  IN (&apos;SMP8&apos;,&apos;SMP9&apos;)&lt;br/&gt;    AND TECNOLOGIA.ID_TIPO_TECNOLOGIA      = indicador.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TIPO_TECNOLOGIA.ID_TIPO_TECNOLOGIA = TECNOLOGIA.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TECNOLOGIA.ID                      = BILHETADOR.ID_TECNOLOGIA&lt;br/&gt;    ) bilhetador&lt;br/&gt;  WHERE codigo.msc = bilhetador.nome&lt;br/&gt;  MINUS&lt;br/&gt;  SELECT DISTINCT msc, TO_CHAR(cn) FROM dados_x_codigos&lt;br/&gt;  ),&lt;br/&gt;  distinct_msc_cn_x_pmm AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;    ) datas,&lt;br/&gt;    (SELECT DISTINCT msc, TO_CHAR(cn) cn FROM dados_x_codigos&lt;br/&gt;    ) msc&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT data,&lt;br/&gt;      msc,&lt;br/&gt;      TO_CHAR(cn) cn&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT DISTINCT data,&lt;br/&gt;        msc,&lt;br/&gt;        cn&lt;br/&gt;      FROM codigos_sem_dados,&lt;br/&gt;        (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;        )&lt;br/&gt;      )&lt;br/&gt;    ) msc&lt;br/&gt;  ),&lt;br/&gt;  dados_trabalhados AS&lt;br/&gt;  (SELECT d.data,&lt;br/&gt;    d.cn,&lt;br/&gt;    d.msc,&lt;br/&gt;    NVL(p.SMP8_A,0) smp8_a,&lt;br/&gt;    NVL(p.SMP8_B,0) smp8_b,&lt;br/&gt;    NVL(&lt;br/&gt;    (SELECT codigo&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT * FROM msc_cn_codigo b ORDER BY msc, cn, ultima_atualizacao&lt;br/&gt;      ) b&lt;br/&gt;    WHERE d.msc             = b.msc&lt;br/&gt;    AND d.cn                = b.cn&lt;br/&gt;    AND TRUNC(d.data,&apos;MM&apos;) &gt;= TRUNC(b.ultima_atualizacao,&apos;MM&apos;)&lt;br/&gt;    AND rownum              = 1&lt;br/&gt;    ) ,&apos;NID&apos;) AS codigo&lt;br/&gt;  FROM distinct_msc_cn_x_pmm d,&lt;br/&gt;    dados_x_codigos p,&lt;br/&gt;    view_msc_cn_ativo_smp8 cnAtivo&lt;br/&gt;  WHERE d.msc                                               = p.msc (+)&lt;br/&gt;  AND d.cn                                                  = p.cn (+)&lt;br/&gt;  AND TRUNC(d.data)                                         = TRUNC(p.data (+))&lt;br/&gt;  AND cnAtivo.msc                                           = d.msc&lt;br/&gt;  AND cnAtivo.cn                                            = d.cn&lt;br/&gt;  AND to_date(TO_CHAR(cnAtivo.periodo,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = to_date(TO_CHAR(d.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;)&lt;br/&gt;  AND cnAtivo.status                                        = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  dados_smp8 AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT &apos;SMP8&apos;                          AS SMP,&lt;br/&gt;      TO_CHAR(c.data,&apos;MM/yyyy&apos;)             AS DDX,&lt;br/&gt;      NULL                                  AS CONSOLIDACAO,&lt;br/&gt;      DECODE(c.codigo,NULL,&apos;NID&apos;, c.codigo) AS PRIMARIA,&lt;br/&gt;      &apos;35&apos;                                  AS PONDERACAO,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP8_B,0))),&apos;-&apos;)  AS val_ponderacao,&lt;br/&gt;      &apos;03&apos;                                  AS COLETA,&lt;br/&gt;      &apos;&apos;                                    AS indice_14,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_14,&lt;br/&gt;      &apos;&apos;                                    AS indice_15,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_15,&lt;br/&gt;      &apos;&apos;                                    AS indice_17,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_17,&lt;br/&gt;      &apos;&apos;                                    AS indice_18,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_18,&lt;br/&gt;      &apos;&apos;                                    AS indice_19,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_19,&lt;br/&gt;      &apos;&apos;                                    AS indice_20,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_20,&lt;br/&gt;      &apos;&apos;                                    AS indice_22,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_22,&lt;br/&gt;      &apos;&apos;                                    AS indice_23,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_23,&lt;br/&gt;      &apos;&apos;                                    AS indice_24,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_24,&lt;br/&gt;      &apos;&apos;                                    AS indice_25,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_25,&lt;br/&gt;      &apos;&apos;                                    AS indice_27,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_27,&lt;br/&gt;      &apos;&apos;                                    AS indice_28,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_28,&lt;br/&gt;      &apos;&apos;                                    AS indice_30,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_30,&lt;br/&gt;      &apos;&apos;                                    AS indice_31,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_31,&lt;br/&gt;      &apos;33&apos;                                  AS indice_33,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP8_A,0))),&apos;-&apos;)  AS val_indice_33,&lt;br/&gt;      &apos;34&apos;                                  AS indice_34,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP8_B,0))),&apos;-&apos;)  AS val_indice_34,&lt;br/&gt;      &apos;&apos;                                    AS indice_36,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_36,&lt;br/&gt;      &apos;&apos;                                    AS indice_37,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_37&lt;br/&gt;    FROM dados_trabalhados c&lt;br/&gt;    GROUP BY &apos;SMP8&apos;,&lt;br/&gt;      TO_CHAR(c.data,&apos;MM/yyyy&apos;),&lt;br/&gt;      NULL,&lt;br/&gt;      c.codigo&lt;br/&gt;    ORDER BY primaria&lt;br/&gt;    )&lt;br/&gt;  WHERE primaria != &apos;NID&apos;&lt;br/&gt;  )&lt;br/&gt;SELECT &quot;SMP&quot;,&lt;br/&gt;  &quot;DDX&quot;,&lt;br/&gt;  &quot;CONSOLIDACAO&quot;,&lt;br/&gt;  &quot;PRIMARIA&quot;,&lt;br/&gt;  &quot;PONDERACAO&quot;,&lt;br/&gt;  &quot;VAL_PONDERACAO&quot;,&lt;br/&gt;  &quot;COLETA&quot;,&lt;br/&gt;  &quot;INDICE_14&quot;,&lt;br/&gt;  &quot;VAL_INDICE_14&quot;,&lt;br/&gt;  &quot;INDICE_15&quot;,&lt;br/&gt;  &quot;VAL_INDICE_15&quot;,&lt;br/&gt;  &quot;INDICE_17&quot;,&lt;br/&gt;  &quot;VAL_INDICE_17&quot;,&lt;br/&gt;  &quot;INDICE_18&quot;,&lt;br/&gt;  &quot;VAL_INDICE_18&quot;,&lt;br/&gt;  &quot;INDICE_19&quot;,&lt;br/&gt;  &quot;VAL_INDICE_19&quot;,&lt;br/&gt;  &quot;INDICE_20&quot;,&lt;br/&gt;  &quot;VAL_INDICE_20&quot;,&lt;br/&gt;  &quot;INDICE_22&quot;,&lt;br/&gt;  &quot;VAL_INDICE_22&quot;,&lt;br/&gt;  &quot;INDICE_23&quot;,&lt;br/&gt;  &quot;VAL_INDICE_23&quot;,&lt;br/&gt;  &quot;INDICE_24&quot;,&lt;br/&gt;  &quot;VAL_INDICE_24&quot;,&lt;br/&gt;  &quot;INDICE_25&quot;,&lt;br/&gt;  &quot;VAL_INDICE_25&quot;,&lt;br/&gt;  &quot;INDICE_27&quot;,&lt;br/&gt;  &quot;VAL_INDICE_27&quot;,&lt;br/&gt;  &quot;INDICE_28&quot;,&lt;br/&gt;  &quot;VAL_INDICE_28&quot;,&lt;br/&gt;  &quot;INDICE_30&quot;,&lt;br/&gt;  &quot;VAL_INDICE_30&quot;,&lt;br/&gt;  &quot;INDICE_31&quot;,&lt;br/&gt;  &quot;VAL_INDICE_31&quot;,&lt;br/&gt;  &quot;INDICE_33&quot;,&lt;br/&gt;  &quot;VAL_INDICE_33&quot;,&lt;br/&gt;  &quot;INDICE_34&quot;,&lt;br/&gt;  &quot;VAL_INDICE_34&quot;,&lt;br/&gt;  &quot;INDICE_36&quot;,&lt;br/&gt;  &quot;VAL_INDICE_36&quot;,&lt;br/&gt;  &quot;INDICE_37&quot;,&lt;br/&gt;  &quot;VAL_INDICE_37&quot;&lt;br/&gt;FROM dados_smp8 ;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE VIEW EASYVIEW.VIEW_SMP9_EXPORTACAO_ANATEL ( SMP, DDX, CONSOLIDACAO, PRIMARIA, PONDERACAO, VAL_PONDERACAO, COLETA, INDICE_14, VAL_INDICE_14, INDICE_15, VAL_INDICE_15, INDICE_17, VAL_INDICE_17, INDICE_18, VAL_INDICE_18, INDICE_19, VAL_INDICE_19, INDICE_20, VAL_INDICE_20, INDICE_22, VAL_INDICE_22, INDICE_23, VAL_INDICE_23, INDICE_24, VAL_INDICE_24, INDICE_25, VAL_INDICE_25, INDICE_27, VAL_INDICE_27, INDICE_28, VAL_INDICE_28, INDICE_30, VAL_INDICE_30, INDICE_31, VAL_INDICE_31, INDICE_33, VAL_INDICE_33, INDICE_34, VAL_INDICE_34, INDICE_36, VAL_INDICE_36, INDICE_37, VAL_INDICE_37 )&lt;br/&gt;                     AS&lt;br/&gt;WITH dados_x_codigos AS&lt;br/&gt;  (SELECT c.DATA,&lt;br/&gt;    c.bilhetador_original,&lt;br/&gt;    c.CENTRAL AS msc,&lt;br/&gt;    c.CN,&lt;br/&gt;    c.PMM,&lt;br/&gt;    c.REGIONAL,&lt;br/&gt;    c.UF,&lt;br/&gt;    c.SMP9_A,&lt;br/&gt;    c.SMP9_B,&lt;br/&gt;    c.codigo&lt;br/&gt;  FROM view_msc_vinculo_smp9 c,&lt;br/&gt;    view_msc_cn_ativo_smp9 v&lt;br/&gt;  WHERE v.CN                                       = c.CN&lt;br/&gt;  AND v.msc                                        = c.central&lt;br/&gt;  AND to_date(TO_CHAR(c.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = v.PERIODO&lt;br/&gt;  AND v.status                                     = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  codigos_sem_dados AS&lt;br/&gt;  ( SELECT DISTINCT codigo.msc,&lt;br/&gt;    codigo.cn&lt;br/&gt;  FROM msc_cn_codigo codigo,&lt;br/&gt;    ( SELECT DISTINCT bilhetador.nome&lt;br/&gt;    FROM indicador,&lt;br/&gt;      TIPO_TECNOLOGIA,&lt;br/&gt;      TECNOLOGIA,&lt;br/&gt;      BILHETADOR&lt;br/&gt;    WHERE indicador.nome                  IN (&apos;SMP8&apos;,&apos;SMP9&apos;)&lt;br/&gt;    AND TECNOLOGIA.ID_TIPO_TECNOLOGIA      = indicador.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TIPO_TECNOLOGIA.ID_TIPO_TECNOLOGIA = TECNOLOGIA.ID_TIPO_TECNOLOGIA&lt;br/&gt;    AND TECNOLOGIA.ID                      = BILHETADOR.ID_TECNOLOGIA&lt;br/&gt;    ) bilhetador&lt;br/&gt;  WHERE codigo.msc = bilhetador.nome&lt;br/&gt;  MINUS&lt;br/&gt;  SELECT DISTINCT msc, TO_CHAR(cn) FROM dados_x_codigos&lt;br/&gt;  ),&lt;br/&gt;  distinct_msc_cn_x_pmm AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;    ) datas,&lt;br/&gt;    (SELECT DISTINCT msc, TO_CHAR(cn) cn FROM dados_x_codigos&lt;br/&gt;    ) msc&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT data,&lt;br/&gt;      msc,&lt;br/&gt;      TO_CHAR(cn) cn&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT DISTINCT data,&lt;br/&gt;        msc,&lt;br/&gt;        cn&lt;br/&gt;      FROM codigos_sem_dados,&lt;br/&gt;        (SELECT DISTINCT TRUNC(data) AS data FROM dados_x_codigos&lt;br/&gt;        )&lt;br/&gt;      )&lt;br/&gt;    ) msc&lt;br/&gt;  ),&lt;br/&gt;  dados_trabalhados AS&lt;br/&gt;  (SELECT d.data,&lt;br/&gt;    d.cn,&lt;br/&gt;    d.msc,&lt;br/&gt;    NVL(p.SMP9_A,0) smp9_a,&lt;br/&gt;    NVL(p.SMP9_B,0) smp9_b,&lt;br/&gt;    NVL(&lt;br/&gt;    (SELECT codigo&lt;br/&gt;    FROM&lt;br/&gt;      (SELECT * FROM msc_cn_codigo b ORDER BY msc, cn, ultima_atualizacao&lt;br/&gt;      ) b&lt;br/&gt;    WHERE d.msc             = b.msc&lt;br/&gt;    AND d.cn                = b.cn&lt;br/&gt;    AND TRUNC(d.data,&apos;MM&apos;) &gt;= TRUNC(b.ultima_atualizacao,&apos;MM&apos;)&lt;br/&gt;    AND rownum              = 1&lt;br/&gt;    ) ,&apos;NID&apos;) AS codigo&lt;br/&gt;  FROM distinct_msc_cn_x_pmm d,&lt;br/&gt;    dados_x_codigos p,&lt;br/&gt;    view_msc_cn_ativo_smp9 cnAtivo&lt;br/&gt;  WHERE d.msc                                               = p.msc (+)&lt;br/&gt;  AND d.cn                                                  = p.cn (+)&lt;br/&gt;  AND TRUNC(d.data)                                         = TRUNC(p.data (+))&lt;br/&gt;  AND cnAtivo.msc                                           = d.msc&lt;br/&gt;  AND cnAtivo.cn                                            = d.cn&lt;br/&gt;  AND to_date(TO_CHAR(cnAtivo.periodo,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = to_date(TO_CHAR(d.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;)&lt;br/&gt;  AND cnAtivo.status                                        = &apos;T&apos;&lt;br/&gt;  ),&lt;br/&gt;  dados_smp9 AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT &apos;SMP9&apos;                          AS SMP,&lt;br/&gt;      TO_CHAR(c.data,&apos;MM/yyyy&apos;)             AS DDX,&lt;br/&gt;      NULL                                  AS CONSOLIDACAO,&lt;br/&gt;      DECODE(c.codigo,NULL,&apos;NID&apos;, c.codigo) AS PRIMARIA,&lt;br/&gt;      &apos;38&apos;                                  AS PONDERACAO,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP9_B,0))),&apos;-&apos;)  AS val_ponderacao,&lt;br/&gt;      &apos;03&apos;                                  AS COLETA,&lt;br/&gt;      &apos;&apos;                                    AS indice_14,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_14,&lt;br/&gt;      &apos;&apos;                                    AS indice_15,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_15,&lt;br/&gt;      &apos;&apos;                                    AS indice_17,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_17,&lt;br/&gt;      &apos;&apos;                                    AS indice_18,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_18,&lt;br/&gt;      &apos;&apos;                                    AS indice_19,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_19,&lt;br/&gt;      &apos;&apos;                                    AS indice_20,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_20,&lt;br/&gt;      &apos;&apos;                                    AS indice_22,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_22,&lt;br/&gt;      &apos;&apos;                                    AS indice_23,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_23,&lt;br/&gt;      &apos;&apos;                                    AS indice_24,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_24,&lt;br/&gt;      &apos;&apos;                                    AS indice_25,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_25,&lt;br/&gt;      &apos;&apos;                                    AS indice_27,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_27,&lt;br/&gt;      &apos;&apos;                                    AS indice_28,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_28,&lt;br/&gt;      &apos;&apos;                                    AS indice_30,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_30,&lt;br/&gt;      &apos;&apos;                                    AS indice_31,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_31,&lt;br/&gt;      &apos;&apos;                                    AS indice_33,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_33,&lt;br/&gt;      &apos;&apos;                                    AS indice_34,&lt;br/&gt;      &apos;&apos;                                    AS val_indice_34,&lt;br/&gt;      &apos;36&apos;                                  AS indice_36,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP9_A,0))),&apos;-&apos;)  AS val_indice_36,&lt;br/&gt;      &apos;37&apos;                                  AS indice_37,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP9_B,0))),&apos;-&apos;)  AS val_indice_37&lt;br/&gt;    FROM dados_trabalhados c&lt;br/&gt;    GROUP BY &apos;SMP9&apos;,&lt;br/&gt;      TO_CHAR(c.data,&apos;MM/yyyy&apos;),&lt;br/&gt;      NULL,&lt;br/&gt;      c.codigo&lt;br/&gt;    ORDER BY primaria&lt;br/&gt;    )&lt;br/&gt;  WHERE primaria != &apos;NID&apos;&lt;br/&gt;  )&lt;br/&gt;SELECT &quot;SMP&quot;,&lt;br/&gt;  &quot;DDX&quot;,&lt;br/&gt;  &quot;CONSOLIDACAO&quot;,&lt;br/&gt;  &quot;PRIMARIA&quot;,&lt;br/&gt;  &quot;PONDERACAO&quot;,&lt;br/&gt;  &quot;VAL_PONDERACAO&quot;,&lt;br/&gt;  &quot;COLETA&quot;,&lt;br/&gt;  &quot;INDICE_14&quot;,&lt;br/&gt;  &quot;VAL_INDICE_14&quot;,&lt;br/&gt;  &quot;INDICE_15&quot;,&lt;br/&gt;  &quot;VAL_INDICE_15&quot;,&lt;br/&gt;  &quot;INDICE_17&quot;,&lt;br/&gt;  &quot;VAL_INDICE_17&quot;,&lt;br/&gt;  &quot;INDICE_18&quot;,&lt;br/&gt;  &quot;VAL_INDICE_18&quot;,&lt;br/&gt;  &quot;INDICE_19&quot;,&lt;br/&gt;  &quot;VAL_INDICE_19&quot;,&lt;br/&gt;  &quot;INDICE_20&quot;,&lt;br/&gt;  &quot;VAL_INDICE_20&quot;,&lt;br/&gt;  &quot;INDICE_22&quot;,&lt;br/&gt;  &quot;VAL_INDICE_22&quot;,&lt;br/&gt;  &quot;INDICE_23&quot;,&lt;br/&gt;  &quot;VAL_INDICE_23&quot;,&lt;br/&gt;  &quot;INDICE_24&quot;,&lt;br/&gt;  &quot;VAL_INDICE_24&quot;,&lt;br/&gt;  &quot;INDICE_25&quot;,&lt;br/&gt;  &quot;VAL_INDICE_25&quot;,&lt;br/&gt;  &quot;INDICE_27&quot;,&lt;br/&gt;  &quot;VAL_INDICE_27&quot;,&lt;br/&gt;  &quot;INDICE_28&quot;,&lt;br/&gt;  &quot;VAL_INDICE_28&quot;,&lt;br/&gt;  &quot;INDICE_30&quot;,&lt;br/&gt;  &quot;VAL_INDICE_30&quot;,&lt;br/&gt;  &quot;INDICE_31&quot;,&lt;br/&gt;  &quot;VAL_INDICE_31&quot;,&lt;br/&gt;  &quot;INDICE_33&quot;,&lt;br/&gt;  &quot;VAL_INDICE_33&quot;,&lt;br/&gt;  &quot;INDICE_34&quot;,&lt;br/&gt;  &quot;VAL_INDICE_34&quot;,&lt;br/&gt;  &quot;INDICE_36&quot;,&lt;br/&gt;  &quot;VAL_INDICE_36&quot;,&lt;br/&gt;  &quot;INDICE_37&quot;,&lt;br/&gt;  &quot;VAL_INDICE_37&quot;&lt;br/&gt;FROM dados_smp9 ;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_EXPORTACAO_ANATEL&quot; (&quot;SMP&quot;, &quot;DATA&quot;, &quot;CONSOLIDACAO&quot;, &quot;PRIMARIA&quot;, &quot;PONDERACAO&quot;, &quot;VAL_PONDERACAO&quot;, &quot;COLETA&quot;, &quot;INDICE_14&quot;, &quot;VAL_INDICE_14&quot;, &quot;INDICE_15&quot;, &quot;VAL_INDICE_15&quot;, &quot;INDICE_17&quot;, &quot;VAL_INDICE_17&quot;, &quot;INDICE_18&quot;, &quot;VAL_INDICE_18&quot;, &quot;INDICE_19&quot;, &quot;VAL_INDICE_19&quot;, &quot;INDICE_20&quot;, &quot;VAL_INDICE_20&quot;, &quot;INDICE_22&quot;, &quot;VAL_INDICE_22&quot;, &quot;INDICE_23&quot;, &quot;VAL_INDICE_23&quot;, &quot;INDICE_24&quot;, &quot;VAL_INDICE_24&quot;, &quot;INDICE_25&quot;, &quot;VAL_INDICE_25&quot;, &quot;INDICE_27&quot;, &quot;VAL_INDICE_27&quot;, &quot;INDICE_28&quot;, &quot;VAL_INDICE_28&quot;, &quot;INDICE_30&quot;, &quot;VAL_INDICE_30&quot;, &quot;INDICE_31&quot;, &quot;VAL_INDICE_31&quot;, &quot;INDICE_33&quot;, &quot;VAL_INDICE_33&quot;, &quot;INDICE_34&quot;, &quot;VAL_INDICE_34&quot;, &quot;INDICE_36&quot;, &quot;VAL_INDICE_36&quot;, &quot;INDICE_37&quot;, &quot;VAL_INDICE_37&quot;, &quot;ID&quot;) AS &lt;br/&gt;  select a.&quot;SMP&quot;,a.&quot;DDX&quot; as DATA,a.&quot;CONSOLIDACAO&quot;,a.&quot;PRIMARIA&quot;,a.&quot;PONDERACAO&quot;,a.&quot;VAL_PONDERACAO&quot;,a.&quot;COLETA&quot;,a.&quot;INDICE_14&quot;,a.&quot;VAL_INDICE_14&quot;,a.&quot;INDICE_15&quot;,a.&quot;VAL_INDICE_15&quot;,a.&quot;INDICE_17&quot;,a.&quot;VAL_INDICE_17&quot;,a.&quot;INDICE_18&quot;,a.&quot;VAL_INDICE_18&quot;,a.&quot;INDICE_19&quot;,a.&quot;VAL_INDICE_19&quot;,a.&quot;INDICE_20&quot;,a.&quot;VAL_INDICE_20&quot;,a.&quot;INDICE_22&quot;,a.&quot;VAL_INDICE_22&quot;,a.&quot;INDICE_23&quot;,a.&quot;VAL_INDICE_23&quot;,a.&quot;INDICE_24&quot;,a.&quot;VAL_INDICE_24&quot;,a.&quot;INDICE_25&quot;,a.&quot;VAL_INDICE_25&quot;,a.&quot;INDICE_27&quot;,a.&quot;VAL_INDICE_27&quot;,a.&quot;INDICE_28&quot;,a.&quot;VAL_INDICE_28&quot;,a.&quot;INDICE_30&quot;,a.&quot;VAL_INDICE_30&quot;,a.&quot;INDICE_31&quot;,a.&quot;VAL_INDICE_31&quot;,a.&quot;INDICE_33&quot;,a.&quot;VAL_INDICE_33&quot;,a.&quot;INDICE_34&quot;,a.&quot;VAL_INDICE_34&quot;,a.&quot;INDICE_36&quot;,a.&quot;VAL_INDICE_36&quot;,a.&quot;INDICE_37&quot;,a.&quot;VAL_INDICE_37&quot;, rownum as id from (&lt;br/&gt;  SELECT * FROM view_smp3_exportacao_anatel&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT * FROM view_smp4_exportacao_anatel&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT * FROM view_smp5_exportacao_anatel&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT * FROM view_smp6_exportacao_anatel&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT * FROM view_smp7_exportacao_anatel&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT * FROM view_smp8_exportacao_anatel&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT * FROM view_smp9_exportacao_anatel) a&lt;br/&gt;  ORDER BY 1,2,3,4,5,6,7,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44;&lt;br/&gt;  &lt;br/&gt; ----ABAIXO SEGUEM VIEWS DOS PAINEIS INICIAIS &lt;br/&gt;	--PAINEL INDICADOR&lt;br/&gt;CREATE OR REPLACE VIEW EASYVIEW.VIEW_SMPS_PMM ( SMP, REGIONAL, DATA, PMM, VALOR, SMP_A, SMP_B )&lt;br/&gt;                  AS&lt;br/&gt;WITH view_smp_pmm AS&lt;br/&gt;  (SELECT &apos;SMP3&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    vsmp.SMP3 valor,&lt;br/&gt;    vsmp.smp_a,&lt;br/&gt;    vsmp.smp_b&lt;br/&gt;  FROM VIEW_SMP3_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP4&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    vsmp.SMP4 valor,&lt;br/&gt;    vsmp.smp_a,&lt;br/&gt;    vsmp.smp_b&lt;br/&gt;  FROM VIEW_SMP4_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;TAXA DE ENTREGA&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    vsmp.SMP valor,&lt;br/&gt;    vsmp.smp_a,&lt;br/&gt;    vsmp.smp_b&lt;br/&gt;  FROM VIEW_SMP4_TX_ENTREGA_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP6&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    &apos;PMM1&apos; AS pmm,&lt;br/&gt;    vsmp.SMP6 valor,&lt;br/&gt;    vsmp.smp_a,&lt;br/&gt;    vsmp.smp_b&lt;br/&gt;  FROM VIEW_SMP6_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP7&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    vsmp.SMP7 valor,&lt;br/&gt;    vsmp.smp_a smp_b,&lt;br/&gt;    vsmp.smp_b smp_a&lt;br/&gt;  FROM VIEW_SMP7_PMM vsmp&lt;br/&gt;  )&lt;br/&gt;SELECT view_smp_pmm.smp,&lt;br/&gt;  view_smp_pmm.REGIONAL,&lt;br/&gt;  view_smp_pmm.data,&lt;br/&gt;  view_smp_pmm.PMM,&lt;br/&gt;  View_Smp_Pmm.Valor,&lt;br/&gt;  NVL(smp_a,0) smp_a,&lt;br/&gt;  NVL(smp_b,0) smp_b&lt;br/&gt;FROM view_smp_pmm ;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_DADOS_AGRUPADOS_SMPS&quot; (&quot;SMP&quot;, &quot;DATA&quot;, &quot;DADOS&quot;) AS &lt;br/&gt;  WITH agrupador_to_list AS&lt;br/&gt;  (SELECT smps.SMP,&lt;br/&gt;    smps.REGIONAL,&lt;br/&gt;    smps.DATA,&lt;br/&gt;    to_clob(ListAgg(smps.PMM&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || smps.VALOR&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY smps.PMM)) valor&lt;br/&gt;  FROM VIEW_SMPS_PMM smps&lt;br/&gt;  GROUP BY smps.SMP,&lt;br/&gt;    smps.REGIONAL,&lt;br/&gt;    smps.DATA&lt;br/&gt;  ),&lt;br/&gt;  dados_agrupados_to_list AS&lt;br/&gt;  (SELECT agrupador.SMP,&lt;br/&gt;    agrupador.DATA,&lt;br/&gt;    ListAgg(&apos;{&apos;&lt;br/&gt;    || agrupador.REGIONAL&lt;br/&gt;    || &apos;[&apos;&lt;br/&gt;    || agrupador.valor&lt;br/&gt;    || &apos;]}&apos;, &apos;;&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY agrupador.REGIONAL) dados&lt;br/&gt;  FROM agrupador_to_list agrupador&lt;br/&gt;  GROUP BY agrupador.SMP,&lt;br/&gt;    agrupador.DATA&lt;br/&gt;  )&lt;br/&gt;SELECT dados.SMP, dados.DATA, dados.dados FROM dados_agrupados_to_list dados;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_TOTALIZADOR_SMPS&quot; (&quot;SMP&quot;, &quot;DATA&quot;, &quot;TOTAL&quot;) AS &lt;br/&gt;  WITH totalizador AS&lt;br/&gt;  (select smp, &lt;br/&gt;          data, &lt;br/&gt;          pmm, &lt;br/&gt;          case when smp_b = 0 then&lt;br/&gt;                          &apos;0,00&apos;&lt;br/&gt;                     else&lt;br/&gt;                          NVL(trim(TO_CHAR(ROUND((Smp_A * 100 / SMP_B), 2),&apos;999990D99&apos;)), &apos;-&apos;)&lt;br/&gt;          end valor&lt;br/&gt;    from (&lt;br/&gt;         SELECT VIEW_SMPS_PMM.SMP,&lt;br/&gt;                VIEW_SMPS_PMM.DATA,&lt;br/&gt;                VIEW_SMPS_PMM.PMM,&lt;br/&gt;                sum(CASE  when Smp_A = &apos;-&apos; THEN 0 else to_number(smp_a) END ) smp_a,&lt;br/&gt;                sum(CASE  when Smp_b = &apos;-&apos; THEN 0 else to_number(smp_b) END ) smp_b&lt;br/&gt;           FROM VIEW_SMPS_PMM&lt;br/&gt;          GROUP BY VIEW_SMPS_PMM.SMP,&lt;br/&gt;                   VIEW_SMPS_PMM.DATA,&lt;br/&gt;                   VIEW_SMPS_PMM.PMM)&lt;br/&gt;  ),&lt;br/&gt;  totalizador_to_list AS&lt;br/&gt;  (SELECT totalizador.SMP,&lt;br/&gt;    totalizador.DATA,&lt;br/&gt;    ListAgg(totalizador.PMM&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || REPLACE(TO_CHAR(totalizador.valor), &apos;,&apos;, &apos;.&apos;)&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY totalizador.PMM) valor&lt;br/&gt;  FROM totalizador&lt;br/&gt;  GROUP BY totalizador.SMP,&lt;br/&gt;    totalizador.DATA&lt;br/&gt;  ),&lt;br/&gt;  agrupador_total AS&lt;br/&gt;  (SELECT total.SMP,&lt;br/&gt;    total.DATA,&lt;br/&gt;    total.valor total&lt;br/&gt;  FROM totalizador_to_list total&lt;br/&gt;  ORDER BY 1,&lt;br/&gt;    2&lt;br/&gt;  )&lt;br/&gt;SELECT agrupador_total.SMP,&lt;br/&gt;  agrupador_total.DATA,&lt;br/&gt;  agrupador_total.total&lt;br/&gt;FROM agrupador_total;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_PAINEL_INDICADOR&quot; (&quot;SMP&quot;, &quot;DATA&quot;, &quot;DADOS&quot;, &quot;TOTAL&quot;) AS &lt;br/&gt;  SELECT upper(vdados.SMP) SMP,&lt;br/&gt;  vdados.DATA,&lt;br/&gt;  REPLACE(vdados.DADOS, &apos;,&apos;, &apos;.&apos;) DADOS,&lt;br/&gt;  vtotal.TOTAL&lt;br/&gt;FROM VIEW_DADOS_AGRUPADOS_SMPS vdados,&lt;br/&gt;  VIEW_TOTALIZADOR_SMPS vtotal&lt;br/&gt;WHERE vdados.SMP = vtotal.SMP&lt;br/&gt;AND vdados.Data  = vtotal.Data&lt;br/&gt;ORDER BY 2 DESC;&lt;br/&gt;&lt;br/&gt;	--PAINEL INDICADOR DDX&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_SMPS_PMM_DDX&quot; (&quot;SMP&quot;, &quot;REGIONAL&quot;, &quot;PMM&quot;, &quot;VALOR&quot;, &quot;SMP_A&quot;, &quot;SMP_B&quot;) AS &lt;br/&gt;  WITH view_smp_PMM_DDX AS&lt;br/&gt;  (SELECT &apos;SMP3&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    vsmp.SMP3 valor,&lt;br/&gt;    smp_a,&lt;br/&gt;    smp_b&lt;br/&gt;  FROM VIEW_SMP3_PMM_DDX vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP4&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    vsmp.SMP4 valor,&lt;br/&gt;    smp_a,&lt;br/&gt;    smp_b&lt;br/&gt;  FROM VIEW_SMP4_PMM_DDX vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;TAXA DE ENTREGA&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    vsmp.SMP valor,&lt;br/&gt;    smp_a,&lt;br/&gt;    smp_b&lt;br/&gt;  FROM VIEW_SMP4_TX_ENTREGA_PMM_DDX vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP6&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.pmm,&lt;br/&gt;    vsmp.SMP6 valor,&lt;br/&gt;    smp_a,&lt;br/&gt;    smp_b&lt;br/&gt;  FROM VIEW_SMP6_PMM_DDX vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP7&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.pmm,&lt;br/&gt;    vsmp.SMP7 valor,&lt;br/&gt;    smp_a smp_b,&lt;br/&gt;    smp_b smp_a&lt;br/&gt;  FROM VIEW_SMP7_PMM_DDX vsmp&lt;br/&gt;  )&lt;br/&gt;SELECT view_smp_PMM_DDX.smp,&lt;br/&gt;  view_smp_PMM_DDX.REGIONAL,&lt;br/&gt;  view_smp_PMM_DDX.PMM,&lt;br/&gt;  View_Smp_PMM_DDX.Valor,&lt;br/&gt;  smp_a,&lt;br/&gt;  smp_b&lt;br/&gt;FROM view_smp_PMM_DDX;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_DADOS_AGRUPADOS_SMPS_DDX&quot; (&quot;SMP&quot;, &quot;DADOS&quot;) AS &lt;br/&gt;  WITH agrupador_to_list AS&lt;br/&gt;  (SELECT smps.SMP,&lt;br/&gt;    smps.REGIONAL,&lt;br/&gt;    to_clob(ListAgg(smps.PMM&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || smps.VALOR&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY smps.PMM)) valor&lt;br/&gt;  FROM VIEW_SMPS_PMM_DDX smps&lt;br/&gt;  GROUP BY smps.SMP,&lt;br/&gt;    smps.REGIONAL&lt;br/&gt;  ),&lt;br/&gt;  dados_agrupados_to_list AS&lt;br/&gt;  (SELECT agrupador.SMP,&lt;br/&gt;    ListAgg(&apos;{&apos;&lt;br/&gt;    || agrupador.REGIONAL&lt;br/&gt;    || &apos;[&apos;&lt;br/&gt;    || agrupador.valor&lt;br/&gt;    || &apos;]}&apos;, &apos;;&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY agrupador.REGIONAL) dados&lt;br/&gt;  FROM agrupador_to_list agrupador&lt;br/&gt;  GROUP BY agrupador.SMP&lt;br/&gt;  )&lt;br/&gt;SELECT dados.SMP, dados.dados FROM dados_agrupados_to_list dados;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_TOTALIZADOR_SMPS_DDX&quot; (&quot;SMP&quot;, &quot;TOTAL&quot;) AS &lt;br/&gt;  WITH totalizador AS&lt;br/&gt;  (select smp, &lt;br/&gt;          pmm, &lt;br/&gt;          case when smp_b = 0 then&lt;br/&gt;                          &apos;0,00&apos;&lt;br/&gt;                     else&lt;br/&gt;                          NVL(trim(TO_CHAR(ROUND((Smp_A * 100 / SMP_B), 2),&apos;999990D99&apos;)), &apos;-&apos;)&lt;br/&gt;          end valor&lt;br/&gt;    from (&lt;br/&gt;         SELECT VIEW_SMPS_PMM_ddx.SMP,&lt;br/&gt;                VIEW_SMPS_PMM_ddx.PMM,&lt;br/&gt;                sum(CASE  when Smp_A = &apos;-&apos; THEN 0 else to_number(smp_a) END ) smp_a,&lt;br/&gt;                sum(CASE  when Smp_b = &apos;-&apos; THEN 0 else to_number(smp_b) END ) smp_b&lt;br/&gt;           FROM VIEW_SMPS_PMM_ddx&lt;br/&gt;          GROUP BY VIEW_SMPS_PMM_ddx.SMP,&lt;br/&gt;                   VIEW_SMPS_PMM_ddx.PMM)&lt;br/&gt;  ),&lt;br/&gt;  totalizador_to_list AS&lt;br/&gt;  (SELECT totalizador.smp,&lt;br/&gt;    ListAgg(totalizador.pmm&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || REPLACE(TO_CHAR(totalizador.valor), &apos;,&apos;, &apos;.&apos;)&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY totalizador.pmm) valor&lt;br/&gt;  FROM totalizador&lt;br/&gt;  GROUP BY totalizador.smp&lt;br/&gt;  ),&lt;br/&gt;  agrupador_total AS&lt;br/&gt;  (SELECT total.smp,&lt;br/&gt;    total.valor total&lt;br/&gt;  FROM totalizador_to_list total&lt;br/&gt;  ORDER BY 1,&lt;br/&gt;    2&lt;br/&gt;  )&lt;br/&gt;SELECT agrupador_total.smp,&lt;br/&gt;  agrupador_total.total&lt;br/&gt;FROM agrupador_total;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_PAINEL_INDICADOR_DDX&quot; (&quot;SMP&quot;, &quot;DADOS&quot;, &quot;TOTAL&quot;) AS &lt;br/&gt;  WITH dados AS&lt;br/&gt;  (SELECT vdados.SMP,&lt;br/&gt;    REPLACE(vdados.DADOS, &apos;,&apos;, &apos;.&apos;) DADOS,&lt;br/&gt;    vtotal.TOTAL&lt;br/&gt;  FROM VIEW_DADOS_AGRUPADOS_SMPS_DDX vdados,&lt;br/&gt;    VIEW_TOTALIZADOR_SMPS_DDX vtotal&lt;br/&gt;  WHERE vdados.SMP = vtotal.SMP&lt;br/&gt;  ORDER BY 2 DESC&lt;br/&gt;  )&lt;br/&gt;SELECT Dados.SMP, Dados.DADOS, Dados.TOTAL FROM Dados;&lt;br/&gt;&lt;br/&gt;	----View do painel inicial SMART&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE VIEW EASYVIEW.VIEW_SMPS_PMM_SMART ( SMP, REGIONAL, DATA, PMM, VALOR, SMP_A, SMP_B, SMP_C, SMP_D )&lt;br/&gt;                  AS&lt;br/&gt;WITH view_smp_pmm AS&lt;br/&gt;  (SELECT &apos;SMP5&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    vsmp.PMM AS PMM,&lt;br/&gt;    vsmp.SMP5 valor,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_a = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_a&lt;br/&gt;    END),0) smp_a,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_b = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_b&lt;br/&gt;    END),0) smp_b,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_c = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_c&lt;br/&gt;    END),0) smp_c,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_d = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_d&lt;br/&gt;    END),0) smp_d&lt;br/&gt;  FROM VIEW_SMP5_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP8&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    &apos;PMM1&apos; AS PMM,&lt;br/&gt;    vsmp.SMP8 valor,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_a = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_a&lt;br/&gt;    END),0) smp_a,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_b = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_b&lt;br/&gt;    END),0) smp_b,&lt;br/&gt;    0 smp_c,&lt;br/&gt;    0 smp_d&lt;br/&gt;  FROM VIEW_SMP8_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP9&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    &apos;PMM1&apos; AS PMM,&lt;br/&gt;    vsmp.SMP9 valor,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_a = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_a&lt;br/&gt;    END),0) smp_a,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_b = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_b&lt;br/&gt;    END),0) smp_b,&lt;br/&gt;    0 smp_c,&lt;br/&gt;    0 smp_d&lt;br/&gt;  FROM VIEW_SMP9_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP10&apos; smp,&lt;br/&gt;    vsmp.uf AS REGIONAL,&lt;br/&gt;    to_date(&apos;01/&apos;&lt;br/&gt;    ||vsmp.DATA,&apos;dd/MM/yyyy&apos;) data,&lt;br/&gt;    &apos;PMM1&apos; AS PMM,&lt;br/&gt;    vsmp.SMP valor,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_a = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_a&lt;br/&gt;    END),0) smp_a,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_b = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_b&lt;br/&gt;    END),0) smp_b,&lt;br/&gt;    0 smp_c,&lt;br/&gt;    0 smp_d&lt;br/&gt;  FROM VIEW_SMP10_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP11-UL&apos; smp,&lt;br/&gt;    vsmp.uf AS REGIONAL,&lt;br/&gt;    to_date(&apos;01/&apos;&lt;br/&gt;    ||vsmp.DATA,&apos;dd/MM/yyyy&apos;) data,&lt;br/&gt;    &apos;PMM1&apos; AS PMM,&lt;br/&gt;    vsmp.SMP valor,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_a = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_a&lt;br/&gt;    END),0) smp_a,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_b = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_b&lt;br/&gt;    END),0) smp_b,&lt;br/&gt;    0 smp_c,&lt;br/&gt;    0 smp_d&lt;br/&gt;  FROM VIEW_SMP11_UL_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP11-DL&apos; smp,&lt;br/&gt;    vsmp.uf AS REGIONAL,&lt;br/&gt;    to_date(&apos;01/&apos;&lt;br/&gt;    ||vsmp.DATA,&apos;dd/MM/yyyy&apos;) data,&lt;br/&gt;    &apos;PMM1&apos; AS PMM,&lt;br/&gt;    vsmp.SMP valor,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_a = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_a&lt;br/&gt;    END),0) smp_a,&lt;br/&gt;    NVL(to_number(&lt;br/&gt;    CASE&lt;br/&gt;      WHEN smp_b = &apos;-&apos;&lt;br/&gt;      THEN &apos;0&apos;&lt;br/&gt;      ELSE smp_b&lt;br/&gt;    END),0) smp_b,&lt;br/&gt;    0 smp_c,&lt;br/&gt;    0 smp_d&lt;br/&gt;  FROM VIEW_SMP11_DL_PMM vsmp&lt;br/&gt;  )&lt;br/&gt;SELECT view_smp_pmm.smp,&lt;br/&gt;  view_smp_pmm.REGIONAL,&lt;br/&gt;  view_smp_pmm.data,&lt;br/&gt;  view_smp_pmm.PMM,&lt;br/&gt;  View_Smp_Pmm.Valor,&lt;br/&gt;  smp_a,&lt;br/&gt;  smp_b,&lt;br/&gt;  smp_c,&lt;br/&gt;  smp_d&lt;br/&gt;FROM view_smp_pmm ;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_DADOS_AGRUPADOS_SMP_SMART&quot; (&quot;SMP&quot;, &quot;DATA&quot;, &quot;DADOS&quot;) AS &lt;br/&gt;  WITH agrupador_to_list AS&lt;br/&gt;  (SELECT smps.SMP,&lt;br/&gt;    smps.REGIONAL,&lt;br/&gt;    smps.DATA,&lt;br/&gt;    to_clob(ListAgg(smps.PMM&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || smps.VALOR&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY smps.PMM)) valor&lt;br/&gt;  FROM VIEW_SMPS_PMM_SMART smps&lt;br/&gt;  GROUP BY smps.SMP,&lt;br/&gt;    smps.REGIONAL,&lt;br/&gt;    smps.DATA&lt;br/&gt;  ),&lt;br/&gt;  dados_agrupados_to_list AS&lt;br/&gt;  (SELECT agrupador.SMP,&lt;br/&gt;    agrupador.DATA,&lt;br/&gt;    ListAgg(&apos;{&apos;&lt;br/&gt;    || agrupador.REGIONAL&lt;br/&gt;    || &apos;[&apos;&lt;br/&gt;    || agrupador.valor&lt;br/&gt;    || &apos;]}&apos;, &apos;;&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY agrupador.REGIONAL) dados&lt;br/&gt;  FROM agrupador_to_list agrupador&lt;br/&gt;  GROUP BY agrupador.SMP,&lt;br/&gt;    agrupador.DATA&lt;br/&gt;  )&lt;br/&gt;SELECT dados.SMP, dados.DATA, dados.dados FROM dados_agrupados_to_list dados;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_TOTALIZADOR_SMPS_SMART&quot; (&quot;SMP&quot;, &quot;DATA&quot;, &quot;TOTAL&quot;) AS &lt;br/&gt;  WITH totalizador AS&lt;br/&gt;  (select smp, &lt;br/&gt;          data, &lt;br/&gt;          pmm,&lt;br/&gt;          case when smp = &apos;SMP5&apos; then&lt;br/&gt;               case when smp_b = 0 or smp_d = 0 then&lt;br/&gt;                       &apos;0,00&apos;&lt;br/&gt;                    else&lt;br/&gt;                        NVL(trim(TO_CHAR(ROUND(((SMP_A / SMP_B)*(SMP_C / SMP_D) * 100),2),&apos;999990D99&apos;)), &apos;-&apos;)&lt;br/&gt;               End&lt;br/&gt;          else          &lt;br/&gt;              case when smp_b = 0 then&lt;br/&gt;                              &apos;0,00&apos;&lt;br/&gt;                         else&lt;br/&gt;                              NVL(trim(TO_CHAR(ROUND((Smp_A * 100 / SMP_B), 2),&apos;999990D99&apos;)), &apos;-&apos;)&lt;br/&gt;              end &lt;br/&gt;          end valor&lt;br/&gt;    from (&lt;br/&gt;         SELECT VIEW_SMPS_PMM_SMART.SMP,&lt;br/&gt;                VIEW_SMPS_PMM_SMART.DATA,&lt;br/&gt;                VIEW_SMPS_PMM_SMART.PMM,&lt;br/&gt;                sum(smp_a) smp_a,&lt;br/&gt;                sum(smp_b) smp_b,&lt;br/&gt;                sum(smp_c) smp_c,&lt;br/&gt;                sum(smp_d) smp_d&lt;br/&gt;           FROM VIEW_SMPS_PMM_SMART&lt;br/&gt;          GROUP BY VIEW_SMPS_PMM_SMART.SMP,&lt;br/&gt;            VIEW_SMPS_PMM_SMART.DATA,&lt;br/&gt;            VIEW_SMPS_PMM_SMART.PMM)&lt;br/&gt;  ),&lt;br/&gt;  totalizador_to_list AS&lt;br/&gt;  (SELECT totalizador.SMP,&lt;br/&gt;    totalizador.DATA,&lt;br/&gt;    ListAgg(totalizador.PMM&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || REPLACE(TO_CHAR(totalizador.valor), &apos;,&apos;, &apos;.&apos;)&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY totalizador.PMM) valor&lt;br/&gt;  FROM totalizador&lt;br/&gt;  GROUP BY totalizador.SMP,&lt;br/&gt;    totalizador.DATA&lt;br/&gt;  ),&lt;br/&gt;  agrupador_total AS&lt;br/&gt;  (SELECT total.SMP,&lt;br/&gt;    total.DATA,&lt;br/&gt;    total.valor total&lt;br/&gt;  FROM totalizador_to_list total&lt;br/&gt;  ORDER BY 1,&lt;br/&gt;    2&lt;br/&gt;  )&lt;br/&gt;SELECT agrupador_total.SMP,&lt;br/&gt;  agrupador_total.DATA,&lt;br/&gt;  agrupador_total.total&lt;br/&gt;FROM agrupador_total;&lt;br/&gt;&lt;br/&gt;	--SMART DDX&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_SMPS_PMM_DDX_SMART&quot; (&quot;SMP&quot;, &quot;REGIONAL&quot;, &quot;PMM&quot;, &quot;VALOR&quot;, &quot;SMP_A&quot;, &quot;SMP_B&quot;) AS &lt;br/&gt;  WITH view_smp_PMM_DDX AS&lt;br/&gt;  (SELECT &apos;SMP5&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    vsmp.SMP5 valor,&lt;br/&gt;    nvl(to_number(case when smp_a = &apos;-&apos; then &apos;0&apos; else smp_a end),0) smp_a,&lt;br/&gt;    nvl(to_number(case when smp_b = &apos;-&apos; then &apos;0&apos; else smp_b end),0) smp_b,&lt;br/&gt;    nvl(to_number(case when smp_c = &apos;-&apos; then &apos;0&apos; else smp_c end),0) smp_c,&lt;br/&gt;    nvl(to_number(case when smp_d = &apos;-&apos; then &apos;0&apos; else smp_d end),0) smp_d&lt;br/&gt;  FROM VIEW_SMP5_PMM_DDX vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP8&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    vsmp.SMP8 valor,&lt;br/&gt;    nvl(to_number(case when smp_a = &apos;-&apos; then &apos;0&apos; else smp_a end),0) smp_a,&lt;br/&gt;    nvl(to_number(case when smp_b = &apos;-&apos; then &apos;0&apos; else smp_b end),0) smp_b,&lt;br/&gt;    0 smp_c,&lt;br/&gt;    0 smp_d&lt;br/&gt;  FROM VIEW_SMP8_PMM_DDX vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP9&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    vsmp.SMP9 valor,&lt;br/&gt;    nvl(to_number(case when smp_a = &apos;-&apos; then &apos;0&apos; else smp_a end),0) smp_a,&lt;br/&gt;    nvl(to_number(case when smp_b = &apos;-&apos; then &apos;0&apos; else smp_b end),0) smp_b,&lt;br/&gt;    0 smp_c,&lt;br/&gt;    0 smp_d&lt;br/&gt;  FROM VIEW_SMP9_PMM_DDX vsmp&lt;br/&gt;  )&lt;br/&gt;SELECT view_smp_PMM_DDX.smp,&lt;br/&gt;  view_smp_PMM_DDX.REGIONAL,&lt;br/&gt;  view_smp_PMM_DDX.PMM,&lt;br/&gt;  View_Smp_PMM_DDX.Valor,&lt;br/&gt;  smp_a,&lt;br/&gt;  smp_b&lt;br/&gt;FROM view_smp_PMM_DDX;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_DADOS_AGRUP_SMP_DDX_SMART&quot; (&quot;SMP&quot;, &quot;DADOS&quot;) AS &lt;br/&gt;  WITH agrupador_to_list AS&lt;br/&gt;  (SELECT smps.SMP,&lt;br/&gt;    smps.REGIONAL,&lt;br/&gt;    to_clob(ListAgg(smps.PMM&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || smps.VALOR&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY smps.PMM)) valor&lt;br/&gt;  FROM VIEW_SMPS_PMM_DDX_SMART smps&lt;br/&gt;  GROUP BY smps.SMP,&lt;br/&gt;    smps.REGIONAL&lt;br/&gt;  ),&lt;br/&gt;  dados_agrupados_to_list AS&lt;br/&gt;  (SELECT agrupador.SMP,&lt;br/&gt;    ListAgg(&apos;{&apos;&lt;br/&gt;    || agrupador.REGIONAL&lt;br/&gt;    || &apos;[&apos;&lt;br/&gt;    || agrupador.valor&lt;br/&gt;    || &apos;]}&apos;, &apos;;&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY agrupador.REGIONAL) dados&lt;br/&gt;  FROM agrupador_to_list agrupador&lt;br/&gt;  GROUP BY agrupador.SMP&lt;br/&gt;  )&lt;br/&gt;SELECT dados.SMP, dados.dados FROM dados_agrupados_to_list dados;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_TOTALIZADOR_SMP_DDX_SMART&quot; (&quot;SMP&quot;, &quot;TOTAL&quot;) AS &lt;br/&gt;  WITH totalizador AS&lt;br/&gt;  (SELECT smp,&lt;br/&gt;    pmm,&lt;br/&gt;    ROUND(AVG(DECODE(valor, &apos;-&apos;, 0, to_number(REPLACE(valor, &apos;.&apos;, &apos;,&apos;)))), 2) valor&lt;br/&gt;  FROM view_smps_pmm_ddx_smart&lt;br/&gt;  GROUP BY smp,&lt;br/&gt;    pmm&lt;br/&gt;  ),&lt;br/&gt;  totalizador_to_list AS&lt;br/&gt;  (SELECT totalizador.smp,&lt;br/&gt;    ListAgg(totalizador.pmm&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || REPLACE(TO_CHAR(totalizador.valor), &apos;,&apos;, &apos;.&apos;)&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY totalizador.pmm) valor&lt;br/&gt;  FROM totalizador&lt;br/&gt;  GROUP BY totalizador.smp&lt;br/&gt;  ),&lt;br/&gt;  agrupador_total AS&lt;br/&gt;  (SELECT total.smp,&lt;br/&gt;    total.valor total&lt;br/&gt;  FROM totalizador_to_list total&lt;br/&gt;  ORDER BY 1,&lt;br/&gt;    2&lt;br/&gt;  )&lt;br/&gt;SELECT agrupador_total.smp, agrupador_total.total FROM agrupador_total;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_PAINEL_INDICADOR_DDX_SMRT&quot; (&quot;SMP&quot;, &quot;DADOS&quot;, &quot;TOTAL&quot;) AS &lt;br/&gt;  WITH dados AS&lt;br/&gt;  (SELECT vdados.SMP,&lt;br/&gt;    REPLACE(vdados.DADOS, &apos;,&apos;, &apos;.&apos;) DADOS,&lt;br/&gt;    vtotal.TOTAL&lt;br/&gt;  FROM VIEW_DADOS_AGRUP_SMP_DDX_SMART vdados,&lt;br/&gt;    VIEW_TOTALIZADOR_SMP_DDX_SMART vtotal&lt;br/&gt;  WHERE vdados.SMP = vtotal.SMP&lt;br/&gt;  ORDER BY 2 DESC&lt;br/&gt;  )&lt;br/&gt;SELECT Dados.SMP, Dados.DADOS, Dados.TOTAL FROM Dados;&lt;br/&gt;&lt;br/&gt;-----------VIEWS PARA FALTA DE DADOS NO SMART&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_SMPS_PMM_FAKE_SMART&quot; (&quot;SMP&quot;, &quot;REGIONAL&quot;, &quot;DATA&quot;, &quot;PMM&quot;, &quot;VALOR&quot;) AS &lt;br/&gt;  WITH view_smp_pmm AS&lt;br/&gt;  (SELECT &apos;SMP5&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    &apos;-&apos; valor&lt;br/&gt;  FROM VIEW_SMP3_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP8&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    &apos;PMM1&apos; AS pmm,&lt;br/&gt;    &apos;-&apos; valor&lt;br/&gt;  FROM VIEW_SMP6_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP9&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.DATA data,&lt;br/&gt;    &apos;PMM1&apos; AS pmm,&lt;br/&gt;    &apos;-&apos; valor&lt;br/&gt;  FROM VIEW_SMP6_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP10&apos; smp,&lt;br/&gt;    vsmp.uf as regional,&lt;br/&gt;    to_date(&apos;01/&apos;||vsmp.DATA,&apos;dd/MM/yyyy&apos;) data,&lt;br/&gt;    &apos;PMM1&apos; as PMM,&lt;br/&gt;    &apos;-&apos; valor&lt;br/&gt;  FROM VIEW_SMP10_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP11-UL&apos; smp,&lt;br/&gt;    vsmp.uf as regional,&lt;br/&gt;    to_date(&apos;01/&apos;||vsmp.DATA,&apos;dd/MM/yyyy&apos;) data,&lt;br/&gt;    &apos;PMM1&apos; as PMM,&lt;br/&gt;    &apos;-&apos; valor&lt;br/&gt;  FROM VIEW_SMP11_UL_PMM vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP11-DL&apos; smp,&lt;br/&gt;    vsmp.uf as regional,&lt;br/&gt;    to_date(&apos;01/&apos;||vsmp.DATA,&apos;dd/MM/yyyy&apos;) data,&lt;br/&gt;    &apos;PMM1&apos; as PMM,&lt;br/&gt;    &apos;-&apos; valor&lt;br/&gt;  FROM VIEW_SMP11_DL_PMM vsmp&lt;br/&gt;  )&lt;br/&gt;SELECT view_smp_pmm.smp,&lt;br/&gt;  view_smp_pmm.REGIONAL,&lt;br/&gt;  view_smp_pmm.data,&lt;br/&gt;  view_smp_pmm.PMM,&lt;br/&gt;  View_Smp_Pmm.Valor&lt;br/&gt;FROM view_smp_pmm;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_DADOS_AGRUP_SMP_FK_SMART&quot; (&quot;SMP&quot;, &quot;DATA&quot;, &quot;DADOS&quot;) AS &lt;br/&gt;  WITH agrupador_to_list AS&lt;br/&gt;  (SELECT smps.SMP,&lt;br/&gt;    smps.REGIONAL,&lt;br/&gt;    smps.DATA,&lt;br/&gt;    to_clob(ListAgg(smps.PMM&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || smps.VALOR&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY smps.PMM)) valor&lt;br/&gt;  FROM VIEW_SMPS_PMM_FAKE_SMART smps&lt;br/&gt;  GROUP BY smps.SMP,&lt;br/&gt;    smps.REGIONAL,&lt;br/&gt;    smps.DATA&lt;br/&gt;  ),&lt;br/&gt;  dados_agrupados_to_list AS&lt;br/&gt;  (SELECT agrupador.SMP,&lt;br/&gt;    agrupador.DATA,&lt;br/&gt;    ListAgg(&apos;{&apos;&lt;br/&gt;    || agrupador.REGIONAL&lt;br/&gt;    || &apos;[&apos;&lt;br/&gt;    || agrupador.valor&lt;br/&gt;    || &apos;]}&apos;, &apos;;&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY agrupador.REGIONAL) dados&lt;br/&gt;  FROM agrupador_to_list agrupador&lt;br/&gt;  GROUP BY agrupador.SMP,&lt;br/&gt;    agrupador.DATA&lt;br/&gt;  )&lt;br/&gt;SELECT dados.SMP, dados.DATA, dados.dados FROM dados_agrupados_to_list dados;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_TOTALIZADOR_SMP_SMRT_FAKE&quot; (&quot;SMP&quot;, &quot;DATA&quot;, &quot;TOTAL&quot;) AS &lt;br/&gt;  WITH totalizador AS&lt;br/&gt;  (SELECT VIEW_SMPS_PMM.SMP,&lt;br/&gt;    VIEW_SMPS_PMM.DATA,&lt;br/&gt;    VIEW_SMPS_PMM.PMM,&lt;br/&gt;    ROUND(AVG(DECODE(VIEW_SMPS_PMM.VALOR, &apos;-&apos;, 0, to_number(REPLACE(VIEW_SMPS_PMM.VALOR, &apos;.&apos;, &apos;,&apos;)))), 2) valor&lt;br/&gt;  FROM VIEW_SMPS_PMM_fake_smart VIEW_SMPS_PMM&lt;br/&gt;  GROUP BY VIEW_SMPS_PMM.SMP,&lt;br/&gt;    VIEW_SMPS_PMM.DATA,&lt;br/&gt;    VIEW_SMPS_PMM.PMM&lt;br/&gt;  ),&lt;br/&gt;  totalizador_to_list AS&lt;br/&gt;  (SELECT totalizador.SMP,&lt;br/&gt;    totalizador.DATA,&lt;br/&gt;    ListAgg(totalizador.PMM&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || REPLACE(TO_CHAR(totalizador.valor), &apos;,&apos;, &apos;.&apos;)&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY totalizador.PMM) valor&lt;br/&gt;  FROM totalizador&lt;br/&gt;  GROUP BY totalizador.SMP,&lt;br/&gt;    totalizador.DATA&lt;br/&gt;  ),&lt;br/&gt;  agrupador_total AS&lt;br/&gt;  (SELECT total.SMP,&lt;br/&gt;    total.DATA,&lt;br/&gt;    total.valor total&lt;br/&gt;  FROM totalizador_to_list total&lt;br/&gt;  ORDER BY 1,&lt;br/&gt;    2&lt;br/&gt;  )&lt;br/&gt;SELECT agrupador_total.SMP,&lt;br/&gt;  agrupador_total.DATA,&lt;br/&gt;  agrupador_total.total&lt;br/&gt;FROM agrupador_total;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_SMPS_PMM_DDX_FK_SMART&quot; (&quot;SMP&quot;, &quot;REGIONAL&quot;, &quot;PMM&quot;, &quot;VALOR&quot;) AS &lt;br/&gt;  WITH view_smp_PMM_DDX AS&lt;br/&gt;  (SELECT &apos;SMP5&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    &apos;-&apos; valor&lt;br/&gt;  FROM VIEW_SMP3_PMM_DDX vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP8&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.PMM,&lt;br/&gt;    &apos;-&apos; valor&lt;br/&gt;  FROM VIEW_SMP4_PMM_DDX vsmp&lt;br/&gt;  UNION ALL&lt;br/&gt;  SELECT &apos;SMP9&apos; smp,&lt;br/&gt;    vsmp.REGIONAL,&lt;br/&gt;    vsmp.pmm,&lt;br/&gt;    &apos;-&apos; valor&lt;br/&gt;  FROM VIEW_SMP6_PMM_DDX vsmp&lt;br/&gt;  )&lt;br/&gt;SELECT view_smp_PMM_DDX.smp,&lt;br/&gt;  view_smp_PMM_DDX.REGIONAL,&lt;br/&gt;  view_smp_PMM_DDX.PMM,&lt;br/&gt;  View_Smp_PMM_DDX.Valor&lt;br/&gt;FROM view_smp_PMM_DDX;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_DADOS_AGR_FK_SMP_DDX_SMRT&quot; (&quot;SMP&quot;, &quot;DADOS&quot;) AS &lt;br/&gt;  WITH agrupador_to_list AS&lt;br/&gt;  (SELECT smps.SMP,&lt;br/&gt;    smps.REGIONAL,&lt;br/&gt;    to_clob(ListAgg(smps.PMM&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || smps.VALOR&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY smps.PMM)) valor&lt;br/&gt;  FROM VIEW_SMPS_PMM_DDX_FK_SMART smps&lt;br/&gt;  GROUP BY smps.SMP,&lt;br/&gt;    smps.REGIONAL&lt;br/&gt;  ),&lt;br/&gt;  dados_agrupados_to_list AS&lt;br/&gt;  (SELECT agrupador.SMP,&lt;br/&gt;    ListAgg(&apos;{&apos;&lt;br/&gt;    || agrupador.REGIONAL&lt;br/&gt;    || &apos;[&apos;&lt;br/&gt;    || agrupador.valor&lt;br/&gt;    || &apos;]}&apos;, &apos;;&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY agrupador.REGIONAL) dados&lt;br/&gt;  FROM agrupador_to_list agrupador&lt;br/&gt;  GROUP BY agrupador.SMP&lt;br/&gt;  )&lt;br/&gt;SELECT dados.SMP, dados.dados FROM dados_agrupados_to_list dados;&lt;br/&gt;&lt;br/&gt;CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_TOTAL_SMPS_DDX_FAKE_SMART&quot; (&quot;SMP&quot;, &quot;TOTAL&quot;) AS &lt;br/&gt;  WITH totalizador AS&lt;br/&gt;  (SELECT smp,&lt;br/&gt;    pmm,&lt;br/&gt;    ROUND(AVG(DECODE(valor, &apos;-&apos;, 0, to_number(REPLACE(valor, &apos;.&apos;, &apos;,&apos;)))), 2) valor&lt;br/&gt;  FROM view_smps_pmm_ddx_fk_smart&lt;br/&gt;  GROUP BY smp,&lt;br/&gt;    pmm&lt;br/&gt;  ),&lt;br/&gt;  totalizador_to_list AS&lt;br/&gt;  (SELECT totalizador.smp,&lt;br/&gt;    ListAgg(totalizador.pmm&lt;br/&gt;    || &apos;(&apos;&lt;br/&gt;    || REPLACE(TO_CHAR(totalizador.valor), &apos;,&apos;, &apos;.&apos;)&lt;br/&gt;    || &apos;)|&apos;) WITHIN GROUP (&lt;br/&gt;  ORDER BY totalizador.pmm) valor&lt;br/&gt;  FROM totalizador&lt;br/&gt;  GROUP BY totalizador.smp&lt;br/&gt;  ),&lt;br/&gt;  agrupador_total AS&lt;br/&gt;  (SELECT total.smp,&lt;br/&gt;    total.valor total&lt;br/&gt;  FROM totalizador_to_list total&lt;br/&gt;  ORDER BY 1,&lt;br/&gt;    2&lt;br/&gt;  )&lt;br/&gt;SELECT agrupador_total.smp, agrupador_total.total FROM agrupador_total;&lt;br/&gt;&lt;br/&gt;drop view VIEW_CRIADORA;</endOfScript>
<shouldGeneratescript>true</shouldGeneratescript>
<userDefined>true</userDefined>
<layoutSQL>&lt;?xml version = &apos;1.0&apos; encoding = &apos;UTF-8&apos;?&gt;&lt;br&gt;&lt;ActiveQueryBuilderLayout&gt;&lt;SQL&gt;Select * From&lt;/SQL&gt;&lt;SubQueries&gt;&lt;SubQuery SQL=&quot;Select * From&quot;&gt;&lt;UnionSubQuery/&gt;&lt;/SubQuery&gt;&lt;/SubQueries&gt;&lt;/ActiveQueryBuilderLayout&gt;</layoutSQL>
<parsed>true</parsed>
<schemaObject>4557F491-498C-47A4-4FCC-3C34A06925BD</schemaObject>
</TableView>