<?xml version = '1.0' encoding = 'UTF-8'?>
<TableView class="oracle.dbtools.crest.model.design.relational.TableView" directorySegmentName="seg_0" id="A2973F34-A785-5BBD-BA8D-4620D1A9E259" name="VIEW_SMP8_MSC">
<createdBy>osx</createdBy>
<createdTime>2014-01-02 13:14:33 UTC</createdTime>
<generatorID>Gerado pelo usu√°rio</generatorID>
<ownerDesignName>metricView</ownerDesignName>
<afterCreate>CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_SMP8_MSC&quot; (&quot;DATA&quot;, &quot;MSC&quot;, &quot;CN&quot;, &quot;PMM&quot;, &quot;SMP_A&quot;, &quot;SMP_B&quot;, &quot;SMP&quot;, &quot;DT_FORMATADA&quot;, &quot;UNIDADE_PRIMARIA&quot;, &quot;VINCULADO&quot;) AS &lt;br/&gt;  WITH dados_traducao_sem_vinculo as   &lt;br/&gt;  (select DATA, CENTRAL, CN, PMM, REGIONAL, UF, SMP8_A, SMP8_B  from view_msc_vinculo_smp8&lt;br/&gt;    UNION ALL&lt;br/&gt;    select DATA, bilhetador_original, CN, PMM, REGIONAL, UF, SMP8_A, SMP8_B  from view_msc_vinculo_smp8 where bilhetador_original &lt;&gt; central&lt;br/&gt;  ),&lt;br/&gt;  dados_smp_msc AS&lt;br/&gt;  (SELECT Data,&lt;br/&gt;    Msc,&lt;br/&gt;    CN,&lt;br/&gt;    SMP8_A,&lt;br/&gt;    SMP8_B,&lt;br/&gt;    CASE&lt;br/&gt;      WHEN (SMP8_B           = &apos;0&apos;&lt;br/&gt;      OR SMP8_B              = &apos;-&apos;)&lt;br/&gt;      AND SMP8_A            != &apos;-&apos;&lt;br/&gt;      AND TO_NUMBER(SMP8_A) &gt;= 0&lt;br/&gt;      THEN &apos;0,00&apos;&lt;br/&gt;      WHEN SMP8_B = &apos;-&apos;&lt;br/&gt;      AND SMP8_A  = &apos;-&apos;&lt;br/&gt;      THEN &apos;-&apos;&lt;br/&gt;      WHEN SMP8_B != &apos;-&apos;&lt;br/&gt;      AND SMP8_A   = &apos;-&apos;&lt;br/&gt;      THEN &apos;0,00&apos;&lt;br/&gt;      ELSE NVL(trim(TO_CHAR(ROUND(((SMP8_A / SMP8_B) * 100),2),&apos;999990D99&apos;)), &apos;-&apos;)&lt;br/&gt;    END AS SMP8&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT TRUNC(Tab.DATA)                  AS Data,&lt;br/&gt;      Tab.CENTRAL                            AS Msc,&lt;br/&gt;      Tab.CN                                 AS CN,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP8_A, 0))), &apos;-&apos;) AS SMP8_A,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(SMP8_B, 0))), &apos;-&apos;) AS SMP8_B&lt;br/&gt;    FROM &lt;br/&gt;    view_msc_cn_ativo_smp8 b,&lt;br/&gt;    dados_traducao_sem_vinculo Tab&lt;br/&gt;    where tab.central = b.msc&lt;br/&gt;      and tab.cn = b.cn&lt;br/&gt;      and to_date(to_char(tab.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = b.periodo&lt;br/&gt;      and b.status = &apos;T&apos;&lt;br/&gt;    GROUP BY TRUNC(Tab.DATA),&lt;br/&gt;      Tab.CENTRAL,&lt;br/&gt;      Tab.CN&lt;br/&gt;    )&lt;br/&gt;  ),&lt;br/&gt;  agrupadores_smp_mscs AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT dados_smp_msc.Data FROM dados_smp_msc&lt;br/&gt;    ) datas,&lt;br/&gt;    (SELECT DISTINCT dados_smp_msc.Msc, dados_smp_msc.CN FROM dados_smp_msc&lt;br/&gt;    ) mscs&lt;br/&gt;  ),&lt;br/&gt;  agrupadores_por_dados AS&lt;br/&gt;  (SELECT agrupadores.Data,&lt;br/&gt;    agrupadores.Msc,&lt;br/&gt;    agrupadores.CN,&lt;br/&gt;    NVL(dados.SMP8_A, &apos;-&apos;) SMP8_a,&lt;br/&gt;    NVL(dados.SMP8_B, &apos;-&apos;) SMP8_b,&lt;br/&gt;    NVL(dados.SMP8, &apos;-&apos;) SMP8&lt;br/&gt;  FROM dados_smp_msc dados,&lt;br/&gt;    agrupadores_smp_mscs agrupadores&lt;br/&gt;  WHERE agrupadores.Data = dados.Data(+)&lt;br/&gt;  AND agrupadores.Msc    = dados.Msc(+)&lt;br/&gt;  AND agrupadores.CN     = dados.CN(+)&lt;br/&gt;  )&lt;br/&gt;SELECT TO_CHAR(Agrupadores_Por_Dados.Data, &apos;dd/MM/yyyy&apos;) DATA,&lt;br/&gt;  Agrupadores_Por_Dados.Msc,&lt;br/&gt;  to_number(Agrupadores_Por_Dados.CN) cn,&lt;br/&gt;  &apos;PMM&apos;                        AS PMM,&lt;br/&gt;  Agrupadores_Por_Dados.SMP8_a AS SMP_A,&lt;br/&gt;  Agrupadores_Por_Dados.SMP8_b AS SMP_B,&lt;br/&gt;  CASE&lt;br/&gt;    WHEN Agrupadores_Por_Dados.SMP8          != &apos;-&apos;&lt;br/&gt;    AND TO_NUMBER(Agrupadores_Por_Dados.SMP8) &gt; 100&lt;br/&gt;    THEN &apos;100,00&apos;&lt;br/&gt;    ELSE replace(Agrupadores_Por_Dados.SMP8,&apos;.&apos;,&apos;,&apos;)&lt;br/&gt;  END                                           AS SMP,&lt;br/&gt;  TO_CHAR(Agrupadores_Por_Dados.Data, &apos;MON-YY&apos;) AS DT_FORMATADA,&lt;br/&gt;  nvl((select codigo from msc_cn_codigo a where a.msc = Agrupadores_Por_Dados.msc and a.cn = Agrupadores_Por_Dados.cn and trunc(a.ultima_atualizacao,&apos;MM&apos;) &lt;= trunc(Agrupadores_Por_Dados.Data,&apos;MM&apos;) and rownum = 1 group by codigo),&apos;NID&apos;) AS unidade_primaria,&lt;br/&gt;  nvl((select 1 from msc_cn_vinculado a where a.msc_destino = Agrupadores_Por_Dados.Msc and a.cn_destino = Agrupadores_Por_Dados.CN and trunc(a.data,&apos;MM&apos;) = trunc(Agrupadores_Por_Dados.Data,&apos;MM&apos;) and rownum = 1),0) as vinculado&lt;br/&gt;FROM Agrupadores_Por_Dados&lt;br/&gt;ORDER BY 2,&lt;br/&gt;  3,&lt;br/&gt;  1,&lt;br/&gt;  4;</afterCreate>
<shouldGeneratescript>true</shouldGeneratescript>
<userDefined>true</userDefined>
<userDefinedSQL>SELECT * FROM dual</userDefinedSQL>
<layoutSQL>&lt;?xml version = &apos;1.0&apos; encoding = &apos;UTF-8&apos;?&gt;&lt;br&gt;&lt;ActiveQueryBuilderLayout&gt;&lt;SQL&gt;Select * From dual&lt;/SQL&gt;&lt;SubQueries&gt;&lt;SubQuery SQL=&quot;Select * From dual&quot;&gt;&lt;UnionSubQuery&gt;&lt;DataSource SQL=&quot;dual&quot; X=&quot;50&quot; Y=&quot;20&quot; Height=&quot;52&quot; Width=&quot;140&quot;/&gt;&lt;/UnionSubQuery&gt;&lt;/SubQuery&gt;&lt;/SubQueries&gt;&lt;/ActiveQueryBuilderLayout&gt;</layoutSQL>
<parsed>true</parsed>
<schemaObject>4557F491-498C-47A4-4FCC-3C34A06925BD</schemaObject>
</TableView>