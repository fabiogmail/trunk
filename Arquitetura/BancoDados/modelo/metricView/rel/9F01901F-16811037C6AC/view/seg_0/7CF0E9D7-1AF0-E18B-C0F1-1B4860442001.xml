<?xml version = '1.0' encoding = 'UTF-8'?>
<TableView class="oracle.dbtools.crest.model.design.relational.TableView" directorySegmentName="seg_0" id="7CF0E9D7-1AF0-E18B-C0F1-1B4860442001" name="VIEW_SMP7_MSC">
<createdBy>osx</createdBy>
<createdTime>2013-11-25 17:38:09 UTC</createdTime>
<generatorID>Gerado pelo usu√°rio</generatorID>
<ownerDesignName>metricView</ownerDesignName>
<afterCreate>CREATE OR REPLACE FORCE VIEW &quot;EASYVIEW&quot;.&quot;VIEW_SMP7_MSC&quot; (&quot;DATA&quot;, &quot;MSC&quot;, &quot;CN&quot;, &quot;PMM&quot;, &quot;SMP_A&quot;, &quot;SMP_B&quot;, &quot;SMP&quot;, &quot;DT_FORMATADA&quot;, &quot;OK1_DRP&quot;, &quot;OK1_DRP_TCT&quot;, &quot;OKT&quot;, &quot;OK_ITCP&quot;, &quot;UNIDADE_PRIMARIA&quot;, &quot;VINCULADO&quot;) AS &lt;br/&gt;  WITH dados_traducao_sem_vinculo as (&lt;br/&gt;    select DATA, HORA, PMM, CN, MSC, OK1_DRP, OK1_DRP_TCT, OKT, OK_ITCP  from view_msc_vinculo_smp7&lt;br/&gt;    UNION ALL&lt;br/&gt;    select DATA, HORA, PMM, CN, bilhetador_original, OK1_DRP, OK1_DRP_TCT, OKT, OK_ITCP from view_msc_vinculo_smp7 where bilhetador_original &lt;&gt; msc&lt;br/&gt;  ),dados_smp_msc AS&lt;br/&gt;  (SELECT Data,&lt;br/&gt;    Msc,&lt;br/&gt;    CN,&lt;br/&gt;    Pmm,&lt;br/&gt;    Smp7_A,&lt;br/&gt;    SMP7_B,&lt;br/&gt;    CASE&lt;br/&gt;      WHEN SMP7_B = &apos;-&apos;&lt;br/&gt;      AND Smp7_A  = &apos;-&apos;&lt;br/&gt;      THEN &apos;-&apos;&lt;br/&gt;      WHEN (SMP7_B = &apos;-&apos;&lt;br/&gt;      OR SMP7_B    = &apos;0&apos;)&lt;br/&gt;      AND Smp7_A  != &apos;-&apos;&lt;br/&gt;      THEN &apos;0,00&apos;&lt;br/&gt;      WHEN SMP7_B           != &apos;-&apos;&lt;br/&gt;      AND TO_NUMBER(SMP7_B) &gt;= 0&lt;br/&gt;      AND Smp7_A             = &apos;-&apos;&lt;br/&gt;      THEN &apos;0,00&apos;&lt;br/&gt;      ELSE NVL(trim(TO_CHAR(ROUND(((SMP7_A / SMP7_B) * 100),2),&apos;999990D99&apos;)), &apos;-&apos;)&lt;br/&gt;    END AS Smp7,&lt;br/&gt;    OK1_DRP,&lt;br/&gt;    OK1_DRP_TCT,&lt;br/&gt;    OKT,&lt;br/&gt;    OK_ITCP&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT TRUNC(Tab.DATA)                                                 AS Data,&lt;br/&gt;      pmm.NOME                                                              AS Pmm,&lt;br/&gt;      Tab.MSC                                                               AS Msc,&lt;br/&gt;      Tab.CN                                                                AS CN,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK1_DRP, 0) + NVL(Tab.OK1_DRP_TCT, 0))), &apos;-&apos;) AS Smp7_A,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OKT, 0)     - NVL(Tab.OK_ITCP, 0))), &apos;-&apos;)     AS SMP7_B,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK1_DRP, 0))), &apos;-&apos;)                           AS OK1_DRP,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK1_DRP_TCT, 0))), &apos;-&apos;)                       AS OK1_DRP_TCT,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OKT, 0))), &apos;-&apos;)                               AS OKT,&lt;br/&gt;      NVL(TO_CHAR(SUM(NVL(Tab.OK_ITCP, 0))), &apos;-&apos;)                           AS OK_ITCP&lt;br/&gt;    FROM &lt;br/&gt;    view_msc_cn_ativo_smp7 b,&lt;br/&gt;    dados_traducao_sem_vinculo Tab&lt;br/&gt;    INNER JOIN PMM pmm&lt;br/&gt;    ON Tab.HORA BETWEEN pmm.INICIO AND pmm.FIM&lt;br/&gt;    where tab.msc = b.msc&lt;br/&gt;      and tab.cn = b.cn&lt;br/&gt;      and to_date(to_char(tab.data,&apos;MM/yyyy&apos;),&apos;MM/yyyy&apos;) = b.periodo&lt;br/&gt;      and b.status = &apos;T&apos;&lt;br/&gt;    GROUP BY TRUNC(Tab.DATA),&lt;br/&gt;      pmm.NOME,&lt;br/&gt;      Tab.MSC,&lt;br/&gt;      Tab.CN&lt;br/&gt;    )&lt;br/&gt;  ),&lt;br/&gt;  agrupadores_smp_mscs AS&lt;br/&gt;  (SELECT *&lt;br/&gt;  FROM&lt;br/&gt;    (SELECT DISTINCT dados_smp_msc.Data FROM dados_smp_msc&lt;br/&gt;    ) datas,&lt;br/&gt;    (SELECT DISTINCT dados_smp_msc.Pmm FROM dados_smp_msc&lt;br/&gt;    ) pmms,&lt;br/&gt;    (SELECT DISTINCT dados_smp_msc.Msc, dados_smp_msc.CN FROM dados_smp_msc&lt;br/&gt;    ) mscs&lt;br/&gt;  ),&lt;br/&gt;  agrupadores_por_dados AS&lt;br/&gt;  (SELECT agrupadores.Data,&lt;br/&gt;    agrupadores.Msc,&lt;br/&gt;    agrupadores.CN,&lt;br/&gt;    agrupadores.Pmm,&lt;br/&gt;    NVL(dados.Smp7_A, &apos;0&apos;) smp7_a,&lt;br/&gt;    NVL(dados.SMP7_B, &apos;0&apos;) smp7_b,&lt;br/&gt;    NVL(dados.Smp7, &apos;0&apos;) Smp7,&lt;br/&gt;    NVL(dados.OK1_DRP, &apos;0&apos;) OK1_DRP,&lt;br/&gt;    NVL(dados.OK1_DRP_TCT, &apos;0&apos;) OK1_DRP_TCT,&lt;br/&gt;    NVL(dados.OKT, &apos;0&apos;) OKT,&lt;br/&gt;    NVL(dados.OK_ITCP, &apos;0&apos;) OK_ITCP&lt;br/&gt;  FROM dados_smp_msc dados,&lt;br/&gt;    agrupadores_smp_mscs agrupadores&lt;br/&gt;  WHERE agrupadores.Data = dados.Data(+)&lt;br/&gt;  AND agrupadores.Pmm    = dados.Pmm(+)&lt;br/&gt;  AND agrupadores.Msc    = dados.Msc(+)&lt;br/&gt;  AND agrupadores.CN     = dados.CN(+)&lt;br/&gt;  )&lt;br/&gt;SELECT TO_CHAR(Agrupadores_Por_Dados.Data, &apos;dd/MM/yyyy&apos;) DATA,&lt;br/&gt;  Agrupadores_Por_Dados.Msc,&lt;br/&gt;  Agrupadores_Por_Dados.CN,&lt;br/&gt;  Agrupadores_Por_Dados.Pmm,&lt;br/&gt;  Agrupadores_Por_Dados.smp7_a AS SMP_A,&lt;br/&gt;  Agrupadores_Por_Dados.smp7_b AS SMP_B,&lt;br/&gt;  CASE&lt;br/&gt;    WHEN Agrupadores_Por_Dados.Smp7          != &apos;-&apos;&lt;br/&gt;    AND to_number(Agrupadores_Por_Dados.Smp7) &gt; 100&lt;br/&gt;    THEN &apos;100,00&apos;&lt;br/&gt;    ELSE replace(Agrupadores_Por_Dados.Smp7,&apos;.&apos;,&apos;,&apos;)&lt;br/&gt;  END                                           AS SMP,&lt;br/&gt;  TO_CHAR(Agrupadores_Por_Dados.Data, &apos;MON-YY&apos;) AS DT_FORMATADA,&lt;br/&gt;  Agrupadores_Por_Dados.OK1_DRP,&lt;br/&gt;  Agrupadores_Por_Dados.OK1_DRP_TCT,&lt;br/&gt;  Agrupadores_Por_Dados.OKT,&lt;br/&gt;  Agrupadores_Por_Dados.OK_ITCP,&lt;br/&gt;  nvl((select codigo from msc_cn_codigo a where a.msc = Agrupadores_Por_Dados.msc and a.cn = Agrupadores_Por_Dados.cn and trunc(a.ultima_atualizacao,&apos;MM&apos;) &lt;= trunc(Agrupadores_Por_Dados.Data,&apos;MM&apos;) and rownum = 1 group by codigo),&apos;NID&apos;) AS unidade_primaria,&lt;br/&gt;  nvl((select 1 from msc_cn_vinculado a where a.msc_destino = Agrupadores_Por_Dados.Msc and a.cn_destino = Agrupadores_Por_Dados.CN and trunc(a.data,&apos;MM&apos;) = trunc(Agrupadores_Por_Dados.Data,&apos;MM&apos;) AND ROWNUM = 1),0) as vinculado&lt;br/&gt;FROM Agrupadores_Por_Dados&lt;br/&gt;ORDER BY 2,&lt;br/&gt;  3,&lt;br/&gt;  1,&lt;br/&gt;  4;</afterCreate>
<shouldGeneratescript>true</shouldGeneratescript>
<userDefined>true</userDefined>
<layoutSQL>&lt;?xml version = &apos;1.0&apos; encoding = &apos;UTF-8&apos;?&gt;&lt;br&gt;&lt;ActiveQueryBuilderLayout&gt;&lt;SQL&gt;Select * From&lt;/SQL&gt;&lt;SubQueries&gt;&lt;SubQuery SQL=&quot;Select * From&quot;&gt;&lt;UnionSubQuery/&gt;&lt;/SubQuery&gt;&lt;/SubQueries&gt;&lt;/ActiveQueryBuilderLayout&gt;</layoutSQL>
<parsed>true</parsed>
<schemaObject>4557F491-498C-47A4-4FCC-3C34A06925BD</schemaObject>
</TableView>